USE [GL_TNB_DWH]
GO

/****** Object:  StoredProcedure [PPL].[STG2_FCT_REQ_MOVEMENT_STATUS]    Script Date: 12/28/2016 8:59:44 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [PPL].[STG2_FCT_REQ_MOVEMENT_STATUS]
(
 @JOB_RUN_KEY_MST BIGINT
 ,@JOB_RUN_KEY_TRN BIGINT
)
AS
BEGIN
/* Stored Procedure Name	:  PPL.STG2_FCT_REQ_MOVEMENT_STATUS
 * Source Tables			:  STG_TNB_TRN_NCB_EVENT_LOG
							   ,STG_TNB_MST_CUSTOMER_INFO
							   ,STG_TNB_MST_LOAN_CUST
							   UNION ALL
							   STG_TRN_APP_IN_LOG
							   ,STG_TRN_APPLICATION
							   ,STG_TNB_TRN_CONTRACT
							   ,STG_TNB_MST_BRANCH
							   ,STG_TNB_MST_DEALER
 * Purpose					:  To replicate data from STG_TRN_APP_IN_LOG and STG_TNB_TRN_NCB_EVENT_LOG to GL_TNB_DWH.FCT.DWH_TNB_FCT_REQ_MOVEMENT_STATUS
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2016-11-24     Suppakorn.C		  Creation of this initialization script.
 */
 DECLARE @STG_CNT BIGINT
 DECLARE @DWH_CNT BIGINT
 DECLARE @UPD_CNT BIGINT
 DECLARE @INS_CNT BIGINT

 DECLARE @MergeOutput table
 (
  ActionType nvarchar(10)
 )

 SET @STG_CNT = 0
 SET @DWH_CNT = 0
 SET @UPD_CNT = 0
 SET @INS_CNT = 0

 --@JOB_RUN_KEY IS NULL NO DATA FROM STAGING TABLE
 IF @JOB_RUN_KEY_TRN = 0
 BEGIN
	GOTO RETURN_POINT
 END

 --STEP 1 COUNT NUMBER OF ROW FROM STAGING TABLE
 SELECT @STG_CNT = COUNT(*) FROM (
					(
						/*------ Data of searching in system from NCB table.-------- */
							SELECT REQ_DOC
								  ,REQUEST_STATUS
								  ,MIN(START_DATE_TIME) AS START_DATE_TIME
								  ,MAX(END_DATE_TIME) AS END_DATE_TIME
								  ,PREV_REQUEST_STATUS
								  ,MAX(USER_ID) AS USER_ID
								  ,JOB_RUN_KEY
								  ,SOURCE_SYSTEM_CODE
								  ,SOURCE_TABLE_NAME
								  ,DELETED_FLAG
								  ,COMMENTS
								  ,SOURCE_LAST_UPDATE_DATE_TIME
								  ,LAST_UPDATE_DATE_TIME
							FROM (						
								SELECT LOAN_CUST.MLMC_REQ_DOC AS REQ_DOC
									  ,'#N' AS REQUEST_STATUS
									  ,NCB_EVENT_LOG.EVENT_ON AS START_DATE_TIME
									  ,APP.MLRQ_START_DATE_TIME AS END_DATE_TIME
									  ,'#N' AS PREV_REQUEST_STATUS
									  ,NCB_EVENT_LOG.EVENT_BY AS USER_ID
									  ,NCB_EVENT_LOG.JOB_RUN_KEY
									  ,NCB_EVENT_LOG.SOURCE_SYSTEM_CODE
									  ,NCB_EVENT_LOG.SOURCE_TABLE_NAME
									  ,NCB_EVENT_LOG.DELETED_FLAG
									  ,NCB_EVENT_LOG.COMMENTS AS COMMENTS
									  ,NCB_EVENT_LOG.SOURCE_LAST_UPDATE_DATE_TIME
									  ,NCB_EVENT_LOG.LAST_UPDATE_DATE_TIME AS LAST_UPDATE_DATE_TIME
									FROM [GL_TNB_STG].[STG].[STG_TNB_TRN_NCB_EVENT_LOG] NCB_EVENT_LOG
									INNER JOIN [GL_TNB_STG].[STG].[STG_TNB_MST_CUSTOMER_INFO] CUSTOMER_INFO
									  ON NCB_EVENT_LOG.CUSTOMER_ID = CUSTOMER_INFO.MINF_ID_CARD
									INNER JOIN [GL_TNB_STG].[STG].[STG_TNB_MST_LOAN_CUST] LOAN_CUST
									  ON CUSTOMER_INFO.MINF_CUSTOMER_ID = LOAN_CUST.MLMC_CIS_NO
									INNER JOIN (
												SELECT	 MLRQ_REQ_DOC
														,MIN(MLRQ_START_DATE_TIME) AS MLRQ_START_DATE_TIME
								
												FROM	GL_TNB_STG.STG.STG_TNB_TRN_APP_IN_LOG
												WHERE	JOB_RUN_KEY = @JOB_RUN_KEY_TRN
												GROUP BY MLRQ_REQ_DOC
										) APP
									  ON LOAN_CUST.MLMC_REQ_DOC = APP.MLRQ_REQ_DOC
										AND DATEADD(DAY,DATEDIFF(DAY,0,NCB_EVENT_LOG.EVENT_ON),0) = DATEADD(DAY,DATEDIFF(DAY,0,APP.MLRQ_START_DATE_TIME),0)
									WHERE NCB_EVENT_LOG.JOB_RUN_KEY = @JOB_RUN_KEY_TRN
									  AND CUSTOMER_INFO.JOB_RUN_KEY = @JOB_RUN_KEY_MST
									  AND LOAN_CUST.JOB_RUN_KEY = @JOB_RUN_KEY_MST
									  AND NCB_EVENT_LOG.EVENT_ON <= APP.MLRQ_START_DATE_TIME
									  AND LOAN_CUST.MLMC_CIS_TYPE = '1'
								) NCB
								GROUP BY REQ_DOC
										,REQUEST_STATUS
										,PREV_REQUEST_STATUS
										,JOB_RUN_KEY
										,SOURCE_SYSTEM_CODE
										,SOURCE_TABLE_NAME
										,DELETED_FLAG
										,COMMENTS
										,SOURCE_LAST_UPDATE_DATE_TIME
										,LAST_UPDATE_DATE_TIME
						)
						UNION ALL
						(
						/*------------- Data from APP In Log table.--------------- */
						/*--- De-duplicate all rows by grouping by all columns --- */
							SELECT	 MLRQ_REQ_DOC AS REQ_DOC
									,MLRQ_STATUS AS REQUEST_STATUS
									,MLRQ_START_DATE_TIME AS START_DATE_TIME
									,MLRQ_END_DATE_TIME AS END_DATE_TIME
									,MLRQ_STATUS_BEFORE_CHANGE AS PREV_REQUEST_STATUS
									,MAX(MLRQ_USER_ID) AS USER_ID
									,JOB_RUN_KEY
									,SOURCE_SYSTEM_CODE
									,SOURCE_TABLE_NAME
									,DELETED_FLAG
									,COMMENTS
									,SOURCE_LAST_UPDATE_DATE_TIME
									,LAST_UPDATE_DATE_TIME
							FROM	GL_TNB_STG.STG.STG_TNB_TRN_APP_IN_LOG
							WHERE	JOB_RUN_KEY = @JOB_RUN_KEY_TRN
							  AND MLRQ_START_DATE_TIME <= MLRQ_END_DATE_TIME
							GROUP BY MLRQ_REQ_DOC
									,MLRQ_STATUS
									,MLRQ_START_DATE_TIME
									,MLRQ_END_DATE_TIME
									,MLRQ_STATUS_BEFORE_CHANGE
									,JOB_RUN_KEY
									,SOURCE_SYSTEM_CODE
									,SOURCE_TABLE_NAME
									,DELETED_FLAG
									,COMMENTS
									,SOURCE_LAST_UPDATE_DATE_TIME
									,LAST_UPDATE_DATE_TIME
						)) APP_IN_LOG
						INNER JOIN (
						SELECT	MLMH_REQ_DOC
								,MLMH_DOC_DATE
								,MLMH_PROJECT_CODE
						FROM	GL_TNB_STG.STG.STG_TNB_TRN_APPLICATION
						WHERE	JOB_RUN_KEY = @JOB_RUN_KEY_TRN
					) TRN_APPLICATION
						ON APP_IN_LOG.REQ_DOC = MLMH_REQ_DOC

 --STEP 2 CREATE TEMP TABLE
	CREATE TABLE #T_SRC_REQ_MOVEMENT_STATUS
	(
		REQ_DOC FLOAT,
		REQUEST_STATUS VARCHAR(2),
		START_DATE_TIME DATETIME,
		END_DATE_TIME DATETIME,
		PREV_REQUEST_STATUS VARCHAR(2),
		USER_ID VARCHAR(100),
		DOC_DATE DATETIME,
		BRANCH_CODE VARCHAR(10),
		DEALER_CODE VARCHAR(10),
		PRODUCT_CODE VARCHAR(10),
		JOB_RUN_KEY BIGINT,
		SOURCE_SYSTEM_CODE VARCHAR(10),
		SOURCE_TABLE_NAME VARCHAR(20),
		DELETED_FLAG CHAR(1),
		COMMENTS VARCHAR(500),
		SOURCE_LAST_UPDATE_DATE_TIME DATETIME,
		LAST_UPDATE_DATE_TIME DATETIME
	)

 --STEP 3 INSERT DATA FROM STG INTO TEMP TABLE
	INSERT INTO #T_SRC_REQ_MOVEMENT_STATUS
	SELECT	 APP_IN_LOG.REQ_DOC AS REQ_DOC
			,ISNULL(APP_IN_LOG.REQUEST_STATUS,'-') AS REQUEST_STATUS
			,APP_IN_LOG.START_DATE_TIME AS START_DATE_TIME
			,APP_IN_LOG.END_DATE_TIME AS END_DATE_TIME
			,ISNULL(APP_IN_LOG.PREV_REQUEST_STATUS,'-') AS PREV_REQUEST_STATUS
			,APP_IN_LOG.USER_ID AS USER_ID
			,MLMH_DOC_DATE AS DOC_DATE
			,ISNULL(BRANCH_CODE,'T025') AS BRANCH_CODE
			,ISNULL(DEALER_CODE,-1) AS DEALER_CODE
			,MLMH_PROJECT_CODE AS PRODUCT_CODE
			,APP_IN_LOG.JOB_RUN_KEY
			,APP_IN_LOG.SOURCE_SYSTEM_CODE
			,APP_IN_LOG.SOURCE_TABLE_NAME
			,APP_IN_LOG.DELETED_FLAG
			,APP_IN_LOG.COMMENTS
			,APP_IN_LOG.SOURCE_LAST_UPDATE_DATE_TIME
			,APP_IN_LOG.LAST_UPDATE_DATE_TIME
	FROM	(
				(
				/*------ Data of searching in system from NCB table.-------- */
					SELECT REQ_DOC
							,REQUEST_STATUS
							,MIN(START_DATE_TIME) AS START_DATE_TIME
							,MAX(END_DATE_TIME) AS END_DATE_TIME
							,PREV_REQUEST_STATUS
							,MAX(USER_ID) AS USER_ID
							,JOB_RUN_KEY
							,SOURCE_SYSTEM_CODE
							,SOURCE_TABLE_NAME
							,DELETED_FLAG
							,COMMENTS
							,SOURCE_LAST_UPDATE_DATE_TIME
							,LAST_UPDATE_DATE_TIME
					FROM (						
						SELECT LOAN_CUST.MLMC_REQ_DOC AS REQ_DOC
								,'#N' AS REQUEST_STATUS
								,NCB_EVENT_LOG.EVENT_ON AS START_DATE_TIME
								,APP.MLRQ_START_DATE_TIME AS END_DATE_TIME
								,'#N' AS PREV_REQUEST_STATUS
								,NCB_EVENT_LOG.EVENT_BY AS USER_ID
								,NCB_EVENT_LOG.JOB_RUN_KEY
								,NCB_EVENT_LOG.SOURCE_SYSTEM_CODE
								,NCB_EVENT_LOG.SOURCE_TABLE_NAME
								,NCB_EVENT_LOG.DELETED_FLAG
								,NCB_EVENT_LOG.COMMENTS AS COMMENTS
								,NCB_EVENT_LOG.SOURCE_LAST_UPDATE_DATE_TIME
								,NCB_EVENT_LOG.LAST_UPDATE_DATE_TIME AS LAST_UPDATE_DATE_TIME
							FROM [GL_TNB_STG].[STG].[STG_TNB_TRN_NCB_EVENT_LOG] NCB_EVENT_LOG
							INNER JOIN [GL_TNB_STG].[STG].[STG_TNB_MST_CUSTOMER_INFO] CUSTOMER_INFO
								ON NCB_EVENT_LOG.CUSTOMER_ID = CUSTOMER_INFO.MINF_ID_CARD
							INNER JOIN [GL_TNB_STG].[STG].[STG_TNB_MST_LOAN_CUST] LOAN_CUST
								ON CUSTOMER_INFO.MINF_CUSTOMER_ID = LOAN_CUST.MLMC_CIS_NO
							INNER JOIN (
										SELECT	 MLRQ_REQ_DOC
												,MIN(MLRQ_START_DATE_TIME) AS MLRQ_START_DATE_TIME
								
										FROM	GL_TNB_STG.STG.STG_TNB_TRN_APP_IN_LOG
										WHERE	JOB_RUN_KEY = @JOB_RUN_KEY_TRN
										GROUP BY MLRQ_REQ_DOC
								) APP
								ON LOAN_CUST.MLMC_REQ_DOC = APP.MLRQ_REQ_DOC
								AND DATEADD(DAY,DATEDIFF(DAY,0,NCB_EVENT_LOG.EVENT_ON),0) = DATEADD(DAY,DATEDIFF(DAY,0,APP.MLRQ_START_DATE_TIME),0)
							WHERE NCB_EVENT_LOG.JOB_RUN_KEY = @JOB_RUN_KEY_TRN
								AND CUSTOMER_INFO.JOB_RUN_KEY = @JOB_RUN_KEY_MST
								AND LOAN_CUST.JOB_RUN_KEY = @JOB_RUN_KEY_MST
								AND NCB_EVENT_LOG.EVENT_ON <= APP.MLRQ_START_DATE_TIME
								AND LOAN_CUST.MLMC_CIS_TYPE = '1'
						) NCB
						GROUP BY REQ_DOC
								,REQUEST_STATUS
								,PREV_REQUEST_STATUS
								,JOB_RUN_KEY
								,SOURCE_SYSTEM_CODE
								,SOURCE_TABLE_NAME
								,DELETED_FLAG
								,COMMENTS
								,SOURCE_LAST_UPDATE_DATE_TIME
								,LAST_UPDATE_DATE_TIME
				)
				UNION ALL
				(
				/*------------- Data from APP In Log table.--------------- */
				/*--- De-duplicate all rows by grouping by all columns --- */
					SELECT	 MLRQ_REQ_DOC AS REQ_DOC
							,MLRQ_STATUS AS REQUEST_STATUS
							,MLRQ_START_DATE_TIME AS START_DATE_TIME
							,MLRQ_END_DATE_TIME AS END_DATE_TIME
							,MLRQ_STATUS_BEFORE_CHANGE AS PREV_REQUEST_STATUS
							,MAX(MLRQ_USER_ID) AS USER_ID
							,JOB_RUN_KEY
							,SOURCE_SYSTEM_CODE
							,SOURCE_TABLE_NAME
							,DELETED_FLAG
							,COMMENTS
							,SOURCE_LAST_UPDATE_DATE_TIME
							,LAST_UPDATE_DATE_TIME
					FROM	GL_TNB_STG.STG.STG_TNB_TRN_APP_IN_LOG
					WHERE	JOB_RUN_KEY = @JOB_RUN_KEY_TRN
					GROUP BY MLRQ_REQ_DOC
							,MLRQ_STATUS
							,MLRQ_START_DATE_TIME
							,MLRQ_END_DATE_TIME
							,MLRQ_STATUS_BEFORE_CHANGE
							,JOB_RUN_KEY
							,SOURCE_SYSTEM_CODE
							,SOURCE_TABLE_NAME
							,DELETED_FLAG
							,COMMENTS
							,SOURCE_LAST_UPDATE_DATE_TIME
							,LAST_UPDATE_DATE_TIME
				)
			) APP_IN_LOG 

			/*   Join STG_TNB_TRN_APPLICATION table for get Doc_Date and Product_Code  */
			INNER JOIN (
				SELECT	MLMH_REQ_DOC
						,MLMH_DOC_DATE
						,MLMH_PROJECT_CODE
				FROM	GL_TNB_STG.STG.STG_TNB_TRN_APPLICATION
				WHERE	JOB_RUN_KEY = @JOB_RUN_KEY_TRN
			) TRN_APPLICATION
				ON APP_IN_LOG.REQ_DOC = MLMH_REQ_DOC

			/*   Join STG_TNB_TRN_CONTRACT table for get Dealer_Code   */
			LEFT OUTER JOIN (
				SELECT	MLHP_REQ_DOC
						,MLHP_DEALER_CODE
						,CASE
							WHEN (MLHP_DEALER_CODE IS NULL) OR (MLHP_DEALER_CODE = '') THEN MLHP_FROM_SHOWROOM
							ELSE MLHP_DEALER_CODE  -- If Dealer Code is blank , select MLHP_FROM_SHOWROOM field to be Dealer_Code.
							END AS MLHP_DEALER_CODE_2
				FROM	GL_TNB_STG.STG.STG_TNB_TRN_CONTRACT
				WHERE	JOB_RUN_KEY = @JOB_RUN_KEY_TRN
			) TRN_CONTRACT
				ON MLMH_REQ_DOC = MLHP_REQ_DOC

			/*   Join for look up Branch_Code   */
			LEFT OUTER JOIN (
				SELECT	MDLR_DEALER_CODE AS BRANCH_CODE
				FROM	GL_TNB_STG.STG.STG_TNB_MST_BRANCH
				WHERE	JOB_RUN_KEY = @JOB_RUN_KEY_MST
			) BRANCH
				ON MLHP_DEALER_CODE_2 = BRANCH_CODE

			/*   Join for look up Dealer_Code   */
			LEFT OUTER JOIN (
							SELECT MDLR_DEALER_CODE AS DEALER_CODE
							FROM	GL_TNB_STG.STG.STG_TNB_MST_DEALER
							WHERE	JOB_RUN_KEY = @JOB_RUN_KEY_MST
			) DEALER 
				ON MLHP_DEALER_CODE_2 = DEALER_CODE 
	WHERE START_DATE_TIME <= END_DATE_TIME

 --STEP 4 MERGE GL_TNB_DWH.DIM.DWH_TNB_FCT_REQ_MOVEMENT_STATUS WITH GL_TNB_STG.STG.STG_TNB_TRN_APP_IN_LOG
 BEGIN
	MERGE GL_TNB_DWH.FACT.DWH_TNB_FCT_REQ_MOVEMENT_STATUS AS TARGET_TABLE
	USING	(
			SELECT	 REQ_DOC
					,REQUEST_STATUS
					,START_DATE_TIME
					,END_DATE_TIME
					,PREV_REQUEST_STATUS
					,USER_ID
					,DOC_DATE
					,BRANCH_CODE
					,DEALER_CODE
					,PRODUCT_CODE
					,JOB_RUN_KEY
					,SOURCE_SYSTEM_CODE
					,SOURCE_TABLE_NAME
					,DELETED_FLAG
					,COMMENTS
					,SOURCE_LAST_UPDATE_DATE_TIME
					,LAST_UPDATE_DATE_TIME
			FROM	#T_SRC_REQ_MOVEMENT_STATUS
			) AS SOURCE_TABLE
	ON (TARGET_TABLE.REQ_DOC = SOURCE_TABLE.REQ_DOC
		AND TARGET_TABLE.REQUEST_STATUS = SOURCE_TABLE.REQUEST_STATUS COLLATE DATABASE_DEFAULT
		AND TARGET_TABLE.START_DATE_TIME = SOURCE_TABLE.START_DATE_TIME
		AND TARGET_TABLE.END_DATE_TIME = SOURCE_TABLE.END_DATE_TIME
		AND TARGET_TABLE.PREV_REQUEST_STATUS = SOURCE_TABLE.PREV_REQUEST_STATUS COLLATE DATABASE_DEFAULT)
	WHEN MATCHED THEN
		UPDATE SET   REQ_DOC = SOURCE_TABLE.REQ_DOC,
					 REQUEST_STATUS = SOURCE_TABLE.REQUEST_STATUS,
					 START_DATE_TIME = SOURCE_TABLE.START_DATE_TIME,
					 END_DATE_TIME = SOURCE_TABLE.END_DATE_TIME,
					 PREV_REQUEST_STATUS = SOURCE_TABLE.PREV_REQUEST_STATUS,
					 USER_ID = SOURCE_TABLE.USER_ID,
					 DOC_DATE = SOURCE_TABLE.DOC_DATE,
					 BRANCH_CODE = SOURCE_TABLE.BRANCH_CODE,
					 DEALER_CODE = SOURCE_TABLE.DEALER_CODE,
					 PRODUCT_CODE = SOURCE_TABLE.PRODUCT_CODE,
					 JOB_RUN_KEY = SOURCE_TABLE.JOB_RUN_KEY,
					 SOURCE_SYSTEM_CODE = SOURCE_TABLE.SOURCE_SYSTEM_CODE,
					 SOURCE_TABLE_NAME = SOURCE_TABLE.SOURCE_TABLE_NAME,
					 DELETED_FLAG = SOURCE_TABLE.DELETED_FLAG,
					 COMMENTS = SOURCE_TABLE.COMMENTS,
					 SOURCE_LAST_UPDATE_DATE_TIME = SOURCE_TABLE.SOURCE_LAST_UPDATE_DATE_TIME,
					 LAST_UPDATE_DATE_TIME = GETDATE()
	WHEN NOT MATCHED THEN
		INSERT (
				  REQ_DOC
				 ,REQUEST_STATUS
				 ,START_DATE_TIME
				 ,END_DATE_TIME
				 ,PREV_REQUEST_STATUS
				 ,USER_ID
				 ,DOC_DATE
				 ,BRANCH_CODE
				 ,DEALER_CODE
				 ,PRODUCT_CODE
				 ,JOB_RUN_KEY
				 ,SOURCE_SYSTEM_CODE
				 ,SOURCE_TABLE_NAME
				 ,DELETED_FLAG
				 ,COMMENTS
				 ,SOURCE_LAST_UPDATE_DATE_TIME
				 ,LAST_UPDATE_DATE_TIME
				)
		VALUES (
				  SOURCE_TABLE.REQ_DOC
				 ,SOURCE_TABLE.REQUEST_STATUS
				 ,SOURCE_TABLE.START_DATE_TIME
				 ,SOURCE_TABLE.END_DATE_TIME
				 ,SOURCE_TABLE.PREV_REQUEST_STATUS
				 ,SOURCE_TABLE.USER_ID
				 ,SOURCE_TABLE.DOC_DATE
				 ,SOURCE_TABLE.BRANCH_CODE
				 ,SOURCE_TABLE.DEALER_CODE
				 ,SOURCE_TABLE.PRODUCT_CODE
				 ,SOURCE_TABLE.JOB_RUN_KEY
				 ,SOURCE_TABLE.SOURCE_SYSTEM_CODE
				 ,SOURCE_TABLE.SOURCE_TABLE_NAME
				 ,SOURCE_TABLE.DELETED_FLAG
				 ,SOURCE_TABLE.COMMENTS
				 ,SOURCE_TABLE.SOURCE_LAST_UPDATE_DATE_TIME
				 ,GETDATE()
				)

	OUTPUT $action INTO @MergeOutput;
 END

 --COUNT UPDATED ROWS
 SELECT @UPD_CNT = COUNT(*) FROM @MergeOutput WHERE ActionType = 'UPDATE'

 --COUNT INSERT ROWS
 SELECT @INS_CNT = COUNT(*) FROM @MergeOutput WHERE ActionType = 'INSERT'

 --STEP 5 COUNT NUMBER OF ROW FROM TARGET TABLE
 SELECT @DWH_CNT = COUNT(*) FROM GL_TNB_DWH.FACT.DWH_TNB_FCT_REQ_MOVEMENT_STATUS WHERE JOB_RUN_KEY = @JOB_RUN_KEY_TRN

 --STEP 6 DROP TEMP TABLE
 DROP TABLE #T_SRC_REQ_MOVEMENT_STATUS



 RETURN_POINT:
	SELECT @STG_CNT AS COUNT_STAGING,@DWH_CNT AS COUNT_WAREHOUSE,@UPD_CNT AS ROWS_UPDATED,@INS_CNT AS ROWS_INSERT


END

GO

