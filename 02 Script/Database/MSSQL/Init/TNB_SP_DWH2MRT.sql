USE [GL_TNB_MRT]
GO
/****** Object:  StoredProcedure [PPL].[DWH2_DIM_ACCOUNT_STATUS]    Script Date: 10/11/2559 11:37:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [PPL].[DWH2_DIM_ACCOUNT_STATUS]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_DIM_ACCOUNT_STATUS
 * Source Tables			:  GL_TNB_DWH.DIM.DWH_TNB_DIM_ACCOUNT_STATUS
 * Purpose					:  To replicate data from GL_TNB_DWH.DIM.DWH_TNB_DIM_ACCOUNT_STATUS to GL_TNB_MRT.DIM.MRT_TNB_DIM_ACCOUNT_STATUS
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2016-09-13     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE DIM DATA IN DATA MART
 DELETE [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_ACCOUNT_STATUS]

 --STEP 2 INSERT DIM DATA FROM DATA WAREHOUSE TO DATA MART
 INSERT INTO [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_ACCOUNT_STATUS]
 SELECT	 [SK_ACCOUNT_STATUS_KEY]
		,[ACCOUNT_STATUS_CODE]
		,[ACCOUNT_STATUS_DESC]
		,[COMMENTS]
		,GETDATE()	
 FROM	 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_ACCOUNT_STATUS]

END
GO
/****** Object:  StoredProcedure [PPL].[DWH2_DIM_APPLICATION_STATUS]    Script Date: 10/11/2559 11:37:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [PPL].[DWH2_DIM_APPLICATION_STATUS]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_DIM_APPLICATION_STATUS
 * Source Tables			:  GL_TNB_DWH.DIM.DWH_TNB_DIM_APPLICATION_STATUS
 * Purpose					:  To replicate data from GL_TNB_DWH.DIM.DWH_TNB_DIM_APPLICATION_STATUS to GL_TNB_MRT.DIM.MRT_TNB_DIM_APPLICATION_STATUS
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2016-09-22     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE DIM DATA IN DATA MART
 DELETE [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_APPLICATION_STATUS]

 --STEP 2 INSERT DIM DATA FROM DATA WAREHOUSE TO DATA MART
 INSERT INTO [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_APPLICATION_STATUS]
 SELECT	 [SK_APPLICATION_STATUS_KEY]
		,[APPLICATION_STATUS_DESC]
		,[COMMENTS]
		,GETDATE()	
 FROM	 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_APPLICATION_STATUS]
END
GO
/****** Object:  StoredProcedure [PPL].[DWH2_DIM_BRANCH]    Script Date: 10/11/2559 11:37:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [PPL].[DWH2_DIM_BRANCH]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_DIM_BRANCH
 * Source Tables			:  GL_TNB_DWH.DIM.DWH_TNB_DIM_BRANCH
 * Purpose					:  To replicate data from GL_TNB_DWH.DIM.DWH_TNB_DIM_BRANCH to GL_TNB_MRT.DIM.MRT_TNB_DIM_BRANCH
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2016-09-13     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE DIM DATA IN DATA MART
 DELETE [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_BRANCH]

 --STEP 2 INSERT DIM DATA FROM DATA WAREHOUSE TO DATA MART
 INSERT INTO [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_BRANCH]
 SELECT	 [SK_BRANCH_KEY]
		,[BRANCH_CODE]
		,[BRANCH_REGION]
		,[BRANCH_NAME_THAI]
		,[BRANCH_NAME_ENGLISH]
		,[BRANCH_SHORT_NAME]
		,[BRANCH_ORDER]
		,[COMMENTS]
		,GETDATE()	
 FROM	 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_BRANCH]

END

GO
/****** Object:  StoredProcedure [PPL].[DWH2_DIM_CUST_REFINANCE]    Script Date: 02/03/2560 9:51:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [PPL].[DWH2_DIM_CUST_REFINANCE]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_DIM_CUST_REFINANCE
 * Source Tables			:  GL_TNB_DWH.DIM.DWH_TNB_DIM_CUST_REFINANCE
 * Purpose					:  To replicate data from GL_TNB_DWH.DIM.DWH_TNB_DIM_CUST_REFINANCE to GL_TNB_MRT.DIM.MRT_TNB_DIM_CUST_REFINANCE
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2017-03-02     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE DIM DATA IN DATA MART
 DELETE [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_CUST_REFINANCE]

 --STEP 2 INSERT DIM DATA FROM DATA WAREHOUSE TO DATA MART
 INSERT INTO [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_CUST_REFINANCE]
 SELECT	 [SK_CUST_REFINANCE_KEY]
		,[CUST_REFINANCE_CODE]
		,[CUST_REFINANCE_DESC_THAI]
		,[CUST_REFINANCE_DESC_ENGLISH]
		,[COMMENTS]
		,GETDATE()	
 FROM	 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_REFINANCE]
END

GO
/****** Object:  StoredProcedure [PPL].[DWH2_DIM_CUST_SOURCE]    Script Date: 10/11/2559 11:37:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [PPL].[DWH2_DIM_CUST_SOURCE]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_DIM_CUST_SOURCE
 * Source Tables			:  GL_TNB_DWH.DIM.DWH_TNB_DIM_CUST_SOURCE
 * Purpose					:  To replicate data from GL_TNB_DWH.DIM.DWH_TNB_DIM_CUST_SOURCE to GL_TNB_MRT.DIM.MRT_TNB_DIM_CUST_SOURCE
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2016-09-13     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE DIM DATA IN DATA MART
 DELETE [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_CUST_SOURCE]

 --STEP 2 INSERT DIM DATA FROM DATA WAREHOUSE TO DATA MART
 INSERT INTO [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_CUST_SOURCE]
 SELECT	 [SK_CUST_SOURCE_KEY]
		,[CUST_SOURCE_CODE]
		,[CUST_SOURCE_DESC]
		,[CUST_SOURCE_DESC_ENG]
		,[COMMENTS]
		,GETDATE()	
 FROM	 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_SOURCE]

END

GO
/****** Object:  StoredProcedure [PPL].[DWH2_DIM_CUST_TYPE]    Script Date: 02/03/2560 9:52:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [PPL].[DWH2_DIM_CUST_TYPE]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_DIM_CUST_TYPE
 * Source Tables			:  GL_TNB_DWH.DIM.DWH_TNB_DIM_CUST_TYPE
 * Purpose					:  To replicate data from GL_TNB_DWH.DIM.DWH_TNB_DIM_CUST_TYPE to GL_TNB_MRT.DIM.MRT_TNB_DIM_CUST_TYPE
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2017-02-03     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE DIM DATA IN DATA MART
 DELETE [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_CUST_TYPE]

 --STEP 2 INSERT DIM DATA FROM DATA WAREHOUSE TO DATA MART
 INSERT INTO [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_CUST_TYPE]
 SELECT	 [SK_CUST_TYPE_KEY]
		,[CUST_TYPE_CODE]
		,[CUST_TYPE_DESC]
		,[COMMENTS]
		,GETDATE()	
 FROM	 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_TYPE]

END

GO
/****** Object:  StoredProcedure [PPL].[DWH2_DIM_DATE]    Script Date: 10/11/2559 11:37:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [PPL].[DWH2_DIM_DATE]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_DIM_DATE
 * Source Tables			:  GL_TNB_DWH.DIM.DWH_TNB_DIM_DATE
 * Purpose					:  To replicate data from GL_TNB_DWH.DIM.DWH_TNB_DIM_DATE to GL_TNB_MRT.DIM.MRT_TNB_DIM_DATE
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.   
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author       Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *    2016-09-13     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE DIM DATA IN DATA MART
 DELETE [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_DATE]

 --STEP 2 INSERT DIM DATA FROM DATA WAREHOUSE TO DATA MART
INSERT INTO [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_DATE]
SELECT [DATE_KEY]
      ,[DATE_TIME]
      ,[FULL_DATE]
      ,[DAY_OF_MONTH]
      ,[DAY_SUFFIX]
      ,[DAY_NAME]
      ,[DAY_SHORT_NAME]
      ,[DAY_OF_WEEK]
      ,[DAY_OF_WEEK_IN_MONTH]
      ,[DAY_OF_WEEK_IN_YEAR]
      ,[DAY_OF_QUARTER]
      ,[DAY_OF_YEAR]
      ,[WEEK_OF_MONTH]
      ,[WEEK_OF_QUARTER]
      ,[WEEK_OF_YEAR]
      ,[MONTH]
      ,[MONTH_NAME]
      ,[MONTH_SHORT_NAME]
      ,[MONTH_OF_QUARTER]
      ,[QUARTER]
      ,[QUARTER_NAME]
      ,[YEAR]
      ,[YEAR_NAME]
      ,[MONTH_YEAR]
      ,[MMYYYY]
      ,[YYYYMM]
      ,[FIRST_DAY_OF_MONTH]
      ,[LAST_DAY_OF_MONTH]
      ,[FIRST_DAY_OF_QUARTER]
      ,[LAST_DAY_OF_QUARTER]
      ,[FIRST_DAY_OF_YEAR]
      ,[LAST_DAY_OF_YEAR]
      ,[IS_HOLIDAY]
      ,[IS_WEEKDAY]
      ,[HOLIDAY_DESC]
	  ,[JOB_RUN_KEY]
	  ,[DELETED_FLAG]
	  ,[COMMENTS]
		,GETDATE()	
 FROM	 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DATE]

END
GO
/****** Object:  StoredProcedure [PPL].[DWH2_DIM_DEALER]    Script Date: 10/11/2559 11:37:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [PPL].[DWH2_DIM_DEALER]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_DIM_DEALER
 * Source Tables			:  GL_TNB_DWH.DIM.DWH_TNB_DIM_DEALER
 * Purpose					:  To replicate data from GL_TNB_DWH.DIM.DWH_TNB_DIM_DEALER to GL_TNB_MRT.DIM.MRT_TNB_DIM_DEALER
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2016-09-13     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE DIM DATA IN DATA MART
 DELETE [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_DEALER]

 --STEP 2 INSERT DIM DATA FROM DATA WAREHOUSE TO DATA MART
 INSERT INTO [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_DEALER]
 SELECT	 [SK_DEALER_KEY]
		,[DEALER_CODE]
		,[DEALER_GROUP]
		,[DEALER_GROUP_ID]
		,[DEALER_NAME_THAI]
		,[DEALER_NAME_ENGLISH]
		,[COMMENTS]
		,GETDATE()	
 FROM	 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DEALER]

END
GO
/****** Object:  StoredProcedure [PPL].[DWH2_DIM_PRODUCT]    Script Date: 10/11/2559 11:37:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [PPL].[DWH2_DIM_PRODUCT]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_DIM_PRODUCT
 * Source Tables			:  GL_TNB_DWH.DIM.DWH_TNB_DIM_PRODUCT
 * Purpose					:  To replicate data from GL_TNB_DWH.DIM.DWH_TNB_DIM_PRODUCT to GL_TNB_MRT.DIM.MRT_TNB_DIM_PRODUCT
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2016-09-13     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE DIM DATA IN DATA MART
 DELETE [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_PRODUCT]

 --STEP 2 INSERT DIM DATA FROM DATA WAREHOUSE TO DATA MART
 INSERT INTO [GL_TNB_MRT].[DIM].[MRT_TNB_DIM_PRODUCT]
 SELECT	 [SK_PRODUCT_KEY]
		,[PRODUCT_CODE]
		,[PRODUCT_NAME]
		,[SUB_PRODUCT_NAME]
		,[COMMENTS]
		,GETDATE()	
 FROM	 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_PRODUCT]
END
GO
/****** Object:  StoredProcedure [PPL].[DWH2_FCT_ACCOUNT_MOVEMENT]    Script Date: 10/11/2559 11:37:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [PPL].[DWH2_FCT_ACCOUNT_MOVEMENT]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_FCT_ACCOUNT_MOVEMENT
 * Source Tables			:  GL_TNB_DWH.FACT.DWH_TNB_FCT_CONTRACT_MONTHLY,GL_TNB_DWH.FACT.DWH_TNB_FCT_APP_CONTRACT
 * Purpose					:  To replicate data from GL_TNB_DWH.FACT.DWH_TNB_FCT_CONTRACT_MONTHLY to GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2016-10-03     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE PREVIOUS DATA FROM DATA MART (LAST 60 DAYS)
 DELETE GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
 --WHERE	EXISTS 	(
	--			 SELECT	*
	--			 FROM	GL_TNB_MRT.DIM.MRT_TNB_DIM_DATE
	--			 WHERE	DATE_TIME BETWEEN CONVERT(DATETIME,CONVERT(VARCHAR(10),DATEADD(DAY,-60,GETDATE()),103),103) 
	--					AND CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),103),103)
	--					AND GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT.SK_DATE_KEY = GL_TNB_MRT.DIM.MRT_TNB_DIM_DATE.DATE_KEY
	--			)

 --STEP 2 INSERT DATA FOR C/F (COLLATERAL LOAN LAST 60 DAYS)
 INSERT INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
 SELECT	 DATA_YEAR
		,CONVERT(INT,DATA_MONTH) AS DATA_MONTH
		,CASE
			WHEN PRODUCT_CODE = '20' THEN 'Collateral Loan (Car)'
			WHEN PRODUCT_CODE IN  ('09', '11', '12') THEN 'Collateral Loan (MC)'
		 END AS PRODUCT
		,'C/F' AS ACCOUNT_STATUS
		,COUNT(*) AS UNIT
		, SUM(CON.OS_BAL) - 
		 (SUM(CON.OS_UID1_UNEARN) + SUM(CON.OS_UID1_SURPLUS) + SUM(CON.OS_UID1_OTHER)) + 
		 (SUM(CON.REALIZE_UNPAID_UNEARN) + SUM(CON.REALIZE_UNPAID_SURPLUS) + SUM(CON.REALIZE_UNPAID_OTHER)) + 
		 (SUM(CON.EOM_UNEARN) + SUM(CON.EOM_SURPLUS) + SUM(CON.EOM_OTHER)) -
		 (SUM(CON.REVERSE_UNEARN) + SUM(CON.REVERSE_SURPLUS) + SUM(CON.REVERSE_OTHER)) AS AMOUNT
		,''
		,GETDATE()
FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_CONTRACT_MONTHLY] CON INNER JOIN 
		 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT]	APP ON CON.DOC_NO = APP.DOC_NO AND CON.CHECK_DIGIT = APP.CHECK_DIGIT INNER JOIN
		 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_BOT_CLASS] BOT ON BOT.BOT_CLASS_CODE = CON.BOT_CLASS_CODE
WHERE PRODUCT_CODE IN  ('09', '11', '12','20')
	  AND CON.REC_STATUS <> 'C'
GROUP BY DATA_YEAR
		,DATA_MONTH
		,CASE
			WHEN PRODUCT_CODE = '20' THEN 'Collateral Loan (Car)'
			WHEN PRODUCT_CODE IN  ('09', '11', '12') THEN 'Collateral Loan (MC)'
		 END

 --STEP 3 INSERT DATA FOR C/F (HIRE PURCHASE LAST 60 DAYS)
 INSERT INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
 SELECT	 DATA_YEAR
		,CONVERT(INT,DATA_MONTH) AS DATA_MONTH
		,CASE
			WHEN PRODUCT_CODE = '08' THEN 'Hire Purchase - SB'
			WHEN PRODUCT_CODE IN  ('02', '03','10') THEN 'Hire Purchase - MFC'
		 END AS PRODUCT
		,'C/F' AS ACCOUNT_STATUS
		,COUNT(*) AS UNIT
		,SUM(CON.OS_BAL) - 
		 SUM(CON.OS_UID1_AMOUNT) -
		 SUM(CON.UNEARN_OTHER) +
		 SUM(CON.REALIZED_UNPAID) + 
		 SUM(CON.ACCRUED_EOM) -
		 SUM(CON.REVERSE_UID_AMT) AS AMOUNT
		,''
		,GETDATE()
FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_CONTRACT_MONTHLY] CON INNER JOIN 
		 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT]	APP ON CON.DOC_NO = APP.DOC_NO AND CON.CHECK_DIGIT = APP.CHECK_DIGIT INNER JOIN
		 [GL_TNB_DWH].[DIM].[DWH_TNB_DIM_BOT_CLASS] BOT ON BOT.BOT_CLASS_CODE = CON.BOT_CLASS_CODE
WHERE PRODUCT_CODE IN  ('08', '02', '03','10')
	  AND CON.REC_STATUS <> 'C'
GROUP BY DATA_YEAR
		,DATA_MONTH
		,CASE
			WHEN PRODUCT_CODE = '08' THEN 'Hire Purchase - SB'
			WHEN PRODUCT_CODE IN  ('02', '03','10') THEN 'Hire Purchase - MFC'
		 END

 --STEP 4 INSERT DATA FOR NEW (COLLATERAL LOAN LAST 60 DAYS)
INSERT INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
SELECT	 MVM.DATA_YEAR
		,MVM.DATA_MONTH
		,MVM.PRODUCT
		,'NEW' AS ACCOUNT_STATUS
		,ISNULL(TMP.UNIT,0) AS UNIT
		,ISNULL(TMP.AMOUNT,0) AS AMOUNT
		,''
		,GETDATE()
FROM	[GL_TNB_MRT].[FACT].[MRT_TNB_FCT_ACCOUNT_MOVEMENT] MVM LEFT OUTER JOIN
		(
			SELECT	 YEAR(APPROVE_LOAN_DATE) AS DATA_YEAR
					,MONTH(APPROVE_LOAN_DATE) AS DATA_MONTH
					,CASE
						WHEN PRODUCT_CODE = '20' THEN 'Collateral Loan (Car)'
						WHEN PRODUCT_CODE IN  ('09', '11', '12') THEN 'Collateral Loan (MC)'
					 END AS PRODUCT
					,COUNT(*) AS UNIT
					, SUM(CON.OS_BAL) - 
					 (SUM(CON.OS_UID1_UNEARN) + SUM(CON.OS_UID1_SURPLUS) + SUM(CON.OS_UID1_OTHER)) + 
					 (SUM(CON.REALIZE_UNPAID_UNEARN) + SUM(CON.REALIZE_UNPAID_SURPLUS) + SUM(CON.REALIZE_UNPAID_OTHER)) + 
					 (SUM(CON.EOM_UNEARN) + SUM(CON.EOM_SURPLUS) + SUM(CON.EOM_OTHER)) -
					 (SUM(CON.REVERSE_UNEARN) + SUM(CON.REVERSE_SURPLUS) + SUM(CON.REVERSE_OTHER)) AS AMOUNT
			FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_CONTRACT_MONTHLY] CON INNER JOIN 
					 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT]	APP ON CON.DOC_NO = APP.DOC_NO AND CON.CHECK_DIGIT = APP.CHECK_DIGIT
			WHERE PRODUCT_CODE IN  ('09', '11', '12','20')
				  AND YEAR(APPROVE_LOAN_DATE) = CON.DATA_YEAR AND MONTH(APPROVE_LOAN_DATE) = CONVERT(INT,CON.DATA_MONTH)
				  AND CON.REC_STATUS <> 'C'
			GROUP BY YEAR(APPROVE_LOAN_DATE)
					,MONTH(APPROVE_LOAN_DATE)
					,CASE
						WHEN PRODUCT_CODE = '20' THEN 'Collateral Loan (Car)'
						WHEN PRODUCT_CODE IN  ('09', '11', '12') THEN 'Collateral Loan (MC)'
					 END
		) TMP ON MVM.DATA_YEAR = TMP.DATA_YEAR AND MVM.DATA_MONTH = TMP.DATA_MONTH AND MVM.PRODUCT = TMP.PRODUCT
WHERE	(MVM.PRODUCT = 'Collateral Loan (Car)' OR MVM.PRODUCT = 'Collateral Loan (MC)') AND MVM.ACCOUNT_STATUS = 'C/F'

 --STEP 5 INSERT DATA FOR NEW (HIRE PURCHASE LAST 60 DAYS)
INSERT INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
SELECT	 MVM.DATA_YEAR
		,MVM.DATA_MONTH
		,MVM.PRODUCT
		,'NEW' AS ACCOUNT_STATUS
		,ISNULL(TMP.UNIT,0) AS UNIT
		,ISNULL(TMP.AMOUNT,0) AS AMOUNT
		,''
		,GETDATE()
FROM	[GL_TNB_MRT].[FACT].[MRT_TNB_FCT_ACCOUNT_MOVEMENT] MVM LEFT OUTER JOIN
		(
			SELECT	 YEAR(APPROVE_LOAN_DATE) AS DATA_YEAR
					,MONTH(APPROVE_LOAN_DATE) AS DATA_MONTH
					,CASE
						WHEN PRODUCT_CODE = '08' THEN 'Hire Purchase - SB'
						WHEN PRODUCT_CODE IN  ('02', '03','10') THEN 'Hire Purchase - MFC'
					 END AS PRODUCT
					,COUNT(*) AS UNIT
					,SUM(CON.OS_BAL) - 
					 SUM(CON.OS_UID1_AMOUNT) -
					 SUM(CON.UNEARN_OTHER) +
					 SUM(CON.REALIZED_UNPAID) + 
					 SUM(CON.ACCRUED_EOM) -
					 SUM(CON.REVERSE_UID_AMT) AS AMOUNT
			FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_CONTRACT_MONTHLY] CON INNER JOIN 
					 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT]	APP ON CON.DOC_NO = APP.DOC_NO AND CON.CHECK_DIGIT = APP.CHECK_DIGIT
			WHERE PRODUCT_CODE IN  ('08', '02', '03','10')
				  AND YEAR(APPROVE_LOAN_DATE) = CON.DATA_YEAR AND MONTH(APPROVE_LOAN_DATE) = CONVERT(INT,CON.DATA_MONTH)
				  AND CON.REC_STATUS <> 'C'
			GROUP BY YEAR(APPROVE_LOAN_DATE)
					,MONTH(APPROVE_LOAN_DATE)
					,CASE
						WHEN PRODUCT_CODE = '08' THEN 'Hire Purchase - SB'
						WHEN PRODUCT_CODE IN  ('02', '03','10') THEN 'Hire Purchase - MFC'
					 END
		) TMP ON MVM.DATA_YEAR = TMP.DATA_YEAR AND MVM.DATA_MONTH = TMP.DATA_MONTH AND MVM.PRODUCT = TMP.PRODUCT
WHERE	(MVM.PRODUCT = 'Hire Purchase - MFC' OR MVM.PRODUCT = 'Hire Purchase - SB') AND MVM.ACCOUNT_STATUS = 'C/F'

 --STEP 6 INSERT DATA FOR REPO (COLLATERAL LOAN LAST 60 DAYS)
INSERT INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
SELECT	 MVM.DATA_YEAR
		,MVM.DATA_MONTH
		,MVM.PRODUCT
		,'REPO' AS ACCOUNT_STATUS
		,ISNULL(TMP.UNIT,0) AS UNIT
		,ISNULL(TMP.AMOUNT,0) AS AMOUNT
		,''
		,GETDATE()
FROM	[GL_TNB_MRT].[FACT].[MRT_TNB_FCT_ACCOUNT_MOVEMENT] MVM LEFT OUTER JOIN
		(
			SELECT	 YEAR(REPO_DATE) AS DATA_YEAR
					,MONTH(REPO_DATE) AS DATA_MONTH
					,CASE
						WHEN PRODUCT_CODE = '20' THEN 'Collateral Loan (Car)'
						WHEN PRODUCT_CODE IN  ('09', '11', '12') THEN 'Collateral Loan (MC)'
					 END AS PRODUCT
					,(COUNT(*))*-1 AS UNIT
					,(SUM(CON.OS_BAL) - 
					 (SUM(CON.OS_UID1_UNEARN) + SUM(CON.OS_UID1_SURPLUS) + SUM(CON.OS_UID1_OTHER)) + 
					 (SUM(CON.REALIZE_UNPAID_UNEARN) + SUM(CON.REALIZE_UNPAID_SURPLUS) + SUM(CON.REALIZE_UNPAID_OTHER)) + 
					 (SUM(CON.EOM_UNEARN) + SUM(CON.EOM_SURPLUS) + SUM(CON.EOM_OTHER)) -
					 (SUM(CON.REVERSE_UNEARN) + SUM(CON.REVERSE_SURPLUS) + SUM(CON.REVERSE_OTHER)))*-1  AS AMOUNT
			FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_CONTRACT_MONTHLY] CON INNER JOIN 
					 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT]	APP ON CON.DOC_NO = APP.DOC_NO AND CON.CHECK_DIGIT = APP.CHECK_DIGIT
			WHERE PRODUCT_CODE IN  ('09', '11', '12','20')
				  AND YEAR(REPO_DATE) = CON.DATA_YEAR AND MONTH(REPO_DATE) = CONVERT(INT,CON.DATA_MONTH)
				  AND CON.REC_STATUS <> 'C' AND ACCOUNT_STATUS_CODE <> 'B'
			GROUP BY YEAR(REPO_DATE)
					,MONTH(REPO_DATE)
					,CASE
						WHEN PRODUCT_CODE = '20' THEN 'Collateral Loan (Car)'
						WHEN PRODUCT_CODE IN  ('09', '11', '12') THEN 'Collateral Loan (MC)'
					 END
		) TMP ON MVM.DATA_YEAR = TMP.DATA_YEAR AND MVM.DATA_MONTH = TMP.DATA_MONTH AND MVM.PRODUCT = TMP.PRODUCT
WHERE	(MVM.PRODUCT = 'Collateral Loan (Car)' OR MVM.PRODUCT = 'Collateral Loan (MC)') AND MVM.ACCOUNT_STATUS = 'C/F'

 --STEP 7 INSERT DATA FOR REPO (HIRE PURCHASE LAST 60 DAYS)
INSERT INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
SELECT	 MVM.DATA_YEAR
		,MVM.DATA_MONTH
		,MVM.PRODUCT
		,'REPO' AS ACCOUNT_STATUS
		,ISNULL(TMP.UNIT,0) AS UNIT
		,ISNULL(TMP.AMOUNT,0) AS AMOUNT
		,''
		,GETDATE()
FROM	[GL_TNB_MRT].[FACT].[MRT_TNB_FCT_ACCOUNT_MOVEMENT] MVM LEFT OUTER JOIN
		(
			SELECT	 YEAR(REPO_DATE) AS DATA_YEAR
					,MONTH(REPO_DATE) AS DATA_MONTH
					,CASE
						WHEN PRODUCT_CODE = '08' THEN 'Hire Purchase - SB'
						WHEN PRODUCT_CODE IN  ('02', '03','10') THEN 'Hire Purchase - MFC'
					 END AS PRODUCT
					,(COUNT(*))*-1  AS UNIT
					,(SUM(CON.OS_BAL) - 
					 SUM(CON.OS_UID1_AMOUNT) -
					 SUM(CON.UNEARN_OTHER) +
					 SUM(CON.REALIZED_UNPAID) + 
					 SUM(CON.ACCRUED_EOM) -
					 SUM(CON.REVERSE_UID_AMT))*-1 AS AMOUNT
			FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_CONTRACT_MONTHLY] CON INNER JOIN 
					 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT]	APP ON CON.DOC_NO = APP.DOC_NO AND CON.CHECK_DIGIT = APP.CHECK_DIGIT
			WHERE PRODUCT_CODE IN  ('08', '02', '03','10')
				  AND YEAR(REPO_DATE) = CON.DATA_YEAR AND MONTH(REPO_DATE) = CONVERT(INT,CON.DATA_MONTH)
				  AND CON.REC_STATUS <> 'C' AND ACCOUNT_STATUS_CODE <> 'B'
			GROUP BY YEAR(REPO_DATE)
					,MONTH(REPO_DATE)
					,CASE
						WHEN PRODUCT_CODE = '08' THEN 'Hire Purchase - SB'
						WHEN PRODUCT_CODE IN  ('02', '03','10') THEN 'Hire Purchase - MFC'
					 END
		) TMP ON MVM.DATA_YEAR = TMP.DATA_YEAR AND MVM.DATA_MONTH = TMP.DATA_MONTH AND MVM.PRODUCT = TMP.PRODUCT
WHERE	(MVM.PRODUCT = 'Hire Purchase - MFC' OR MVM.PRODUCT = 'Hire Purchase - SB') AND MVM.ACCOUNT_STATUS = 'C/F'

 --STEP 8 INSERT DATA FOR WRITE-OFF (COLLATERAL LOAN LAST 60 DAYS)
INSERT INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
SELECT	 MVM.DATA_YEAR
		,MVM.DATA_MONTH
		,MVM.PRODUCT
		,'WRITE-OFF' AS ACCOUNT_STATUS
		,ISNULL(TMP.UNIT,0) AS UNIT
		,ISNULL(TMP.AMOUNT,0) AS AMOUNT
		,''
		,GETDATE()
FROM	[GL_TNB_MRT].[FACT].[MRT_TNB_FCT_ACCOUNT_MOVEMENT] MVM LEFT OUTER JOIN
		(
			SELECT	 YEAR(CHANGE_STATUS_DATE) AS DATA_YEAR
					,MONTH(CHANGE_STATUS_DATE) AS DATA_MONTH
					,CASE
						WHEN PRODUCT_CODE = '20' THEN 'Collateral Loan (Car)'
						WHEN PRODUCT_CODE IN  ('09', '11', '12') THEN 'Collateral Loan (MC)'
					 END AS PRODUCT
					,(COUNT(*))*-1  AS UNIT
					,(SUM(CON.OS_BAL) - 
					 (SUM(CON.OS_UID1_UNEARN) + SUM(CON.OS_UID1_SURPLUS) + SUM(CON.OS_UID1_OTHER)) + 
					 (SUM(CON.REALIZE_UNPAID_UNEARN) + SUM(CON.REALIZE_UNPAID_SURPLUS) + SUM(CON.REALIZE_UNPAID_OTHER)) + 
					 (SUM(CON.EOM_UNEARN) + SUM(CON.EOM_SURPLUS) + SUM(CON.EOM_OTHER)) -
					 (SUM(CON.REVERSE_UNEARN) + SUM(CON.REVERSE_SURPLUS) + SUM(CON.REVERSE_OTHER)))*-1  AS AMOUNT
			FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_CONTRACT_MONTHLY] CON INNER JOIN 
					 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT]	APP ON CON.DOC_NO = APP.DOC_NO AND CON.CHECK_DIGIT = APP.CHECK_DIGIT
			WHERE PRODUCT_CODE IN  ('09', '11', '12','20')
				  AND YEAR(CHANGE_STATUS_DATE) = CON.DATA_YEAR AND MONTH(CHANGE_STATUS_DATE) = CONVERT(INT,CON.DATA_MONTH)
				  AND CON.REC_STATUS <> 'C' AND ACCOUNT_STATUS_CODE = 'B'
			GROUP BY YEAR(CHANGE_STATUS_DATE)
					,MONTH(CHANGE_STATUS_DATE)
					,CASE
						WHEN PRODUCT_CODE = '20' THEN 'Collateral Loan (Car)'
						WHEN PRODUCT_CODE IN  ('09', '11', '12') THEN 'Collateral Loan (MC)'
					 END
		) TMP ON MVM.DATA_YEAR = TMP.DATA_YEAR AND MVM.DATA_MONTH = TMP.DATA_MONTH AND MVM.PRODUCT = TMP.PRODUCT
WHERE	(MVM.PRODUCT = 'Collateral Loan (Car)' OR MVM.PRODUCT = 'Collateral Loan (MC)') AND MVM.ACCOUNT_STATUS = 'C/F'

 --STEP 9 INSERT DATA FOR WRITE-OFF (HIRE PURCHASE LAST 60 DAYS)
INSERT INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
SELECT	 MVM.DATA_YEAR
		,MVM.DATA_MONTH
		,MVM.PRODUCT
		,'WRITE-OFF' AS ACCOUNT_STATUS
		,ISNULL(TMP.UNIT,0) AS UNIT
		,ISNULL(TMP.AMOUNT,0) AS AMOUNT
		,''
		,GETDATE()
FROM	[GL_TNB_MRT].[FACT].[MRT_TNB_FCT_ACCOUNT_MOVEMENT] MVM LEFT OUTER JOIN
		(
			SELECT	 YEAR(CHANGE_STATUS_DATE) AS DATA_YEAR
					,MONTH(CHANGE_STATUS_DATE) AS DATA_MONTH
					,CASE
						WHEN PRODUCT_CODE = '08' THEN 'Hire Purchase - SB'
						WHEN PRODUCT_CODE IN  ('02', '03','10') THEN 'Hire Purchase - MFC'
					 END AS PRODUCT
					,(COUNT(*))*-1  AS UNIT
					,(SUM(CON.OS_BAL) - 
					 SUM(CON.OS_UID1_AMOUNT) -
					 SUM(CON.UNEARN_OTHER) +
					 SUM(CON.REALIZED_UNPAID) + 
					 SUM(CON.ACCRUED_EOM) -
					 SUM(CON.REVERSE_UID_AMT))*-1 AS AMOUNT
			FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_CONTRACT_MONTHLY] CON INNER JOIN 
					 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT]	APP ON CON.DOC_NO = APP.DOC_NO AND CON.CHECK_DIGIT = APP.CHECK_DIGIT
			WHERE PRODUCT_CODE IN  ('08', '02', '03','10')
				  AND YEAR(CHANGE_STATUS_DATE) = CON.DATA_YEAR AND MONTH(CHANGE_STATUS_DATE) = CONVERT(INT,CON.DATA_MONTH)
				  AND CON.REC_STATUS <> 'C' AND ACCOUNT_STATUS_CODE = 'B'
			GROUP BY YEAR(CHANGE_STATUS_DATE)
					,MONTH(CHANGE_STATUS_DATE)
					,CASE
						WHEN PRODUCT_CODE = '08' THEN 'Hire Purchase - SB'
						WHEN PRODUCT_CODE IN  ('02', '03','10') THEN 'Hire Purchase - MFC'
					 END
		) TMP ON MVM.DATA_YEAR = TMP.DATA_YEAR AND MVM.DATA_MONTH = TMP.DATA_MONTH AND MVM.PRODUCT = TMP.PRODUCT
WHERE	(MVM.PRODUCT = 'Hire Purchase - MFC' OR MVM.PRODUCT = 'Hire Purchase - SB') AND MVM.ACCOUNT_STATUS = 'C/F'

 --STEP 10 INSERT DATA FOR B/F (ALL PRODUCT LAST 60 DAYS)
INSERT INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
SELECT	BF.DATA_YEAR,BF.DATA_MONTH,BF.PRODUCT,'B/F' ACCOUNT_STATUS,BF.UNIT,BF.AMOUNT
		,''
		,GETDATE()
FROM	(
			SELECT	 CASE
						WHEN DATA_MONTH = 12 THEN DATA_YEAR + 1
						ELSE DATA_YEAR
					 END DATA_YEAR
					,CASE
						WHEN DATA_MONTH = 12 THEN 1
						ELSE DATA_MONTH + 1
					 END DATA_MONTH
					,PRODUCT,UNIT,AMOUNT
			FROM	[GL_TNB_MRT].[FACT].[MRT_TNB_FCT_ACCOUNT_MOVEMENT]
			WHERE	[ACCOUNT_STATUS] = 'C/F'
		) BF
		,[GL_TNB_MRT].[FACT].[MRT_TNB_FCT_ACCOUNT_MOVEMENT] MV
WHERE	BF.DATA_YEAR = MV.DATA_YEAR AND BF.DATA_MONTH = MV.DATA_MONTH AND BF.PRODUCT = MV.PRODUCT
		AND MV.[ACCOUNT_STATUS] = 'C/F'

 --STEP 11 INSERT DATA FOR CLOSE (ALL PRODUCT LAST 60 DAYS)
INSERT INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_ACCOUNT_MOVEMENT
SELECT	MV.DATA_YEAR,MV.DATA_MONTH,MV.PRODUCT
		,'CLOSE' AS ACCOUNT_STATUS
		,MV.UNIT - ISNULL(TMP.UNIT,0) AS UNIT
		,MV.AMOUNT - ISNULL(TMP.AMOUNT,0) AS AMOUNT
		,''
		,GETDATE()
FROM	[GL_TNB_MRT].[FACT].[MRT_TNB_FCT_ACCOUNT_MOVEMENT] MV LEFT OUTER JOIN
		(
			SELECT	DATA_YEAR,DATA_MONTH,[PRODUCT]
					,SUM(UNIT) AS UNIT
					,SUM(AMOUNT) AS AMOUNT
			FROM	[GL_TNB_MRT].[FACT].[MRT_TNB_FCT_ACCOUNT_MOVEMENT]
			WHERE	[ACCOUNT_STATUS] IN ('B/F','NEW','REPO','WRITE-OFF')
			GROUP BY DATA_YEAR,DATA_MONTH,[PRODUCT]
		) TMP ON MV.DATA_YEAR = TMP.DATA_YEAR AND MV.DATA_MONTH = TMP.DATA_MONTH AND MV.PRODUCT = TMP.PRODUCT
WHERE MV.ACCOUNT_STATUS = 'C/F'
END
GO
/****** Object:  StoredProcedure [PPL].[DWH2_FCT_SALE_CONTRACT]    Script Date: 10/11/2559 11:37:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [PPL].[DWH2_FCT_SALE_CONTRACT]
AS
BEGIN
/* Stored Procedure Name	:  PPL.DWH2_FCT_SALE_CONTRACT
 * Source Tables			:  GL_TNB_DWH.FACT.DWH_TNB_FCT_APP_CONTRACT
 * Purpose					:  To replicate data from GL_TNB_DWH.FACT.DWH_TNB_FCT_APP_CONTRACT to GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT
 * Parameters				:  -     
 * Permissions				:  -
 * Testing Method			: 1. 
							  2. 
							  3.       
 * Revision History
 * ---------  -------------  -------------------  --------------------------------------------------------------
 * ePWR No    Date			 Author               Description of change
 * ---------  -------------  -------------------  --------------------------------------------------------------
 *            2016-09-12     Perasan.A			  Creation of this initialization script.
 */

 --STEP 1 DELETE PREVIOUS DATA FROM DATA MART (LAST 60 DAYS)
 DELETE GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT
 --WHERE	EXISTS 	(
	--			 SELECT	*
	--			 FROM	GL_TNB_MRT.DIM.MRT_TNB_DIM_DATE
	--			 WHERE	DATE_TIME BETWEEN CONVERT(DATETIME,CONVERT(VARCHAR(10),DATEADD(DAY,-60,GETDATE()),103),103) 
	--					AND CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),103),103)
	--					AND GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT.SK_DATE_KEY = GL_TNB_MRT.DIM.MRT_TNB_DIM_DATE.DATE_KEY
	--			)

 --STEP 2 INSERT DATA FOR APPLICATION_STATUS = 'Application' (ALL PRODUCT LAST 60 DAYS)
BEGIN
 INSERT	 INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT
 SELECT	 DIM_DATE.DATE_KEY AS SK_DATE_KEY
		,SK_PRODUCT_KEY
		,SK_BRANCH_KEY
		,SK_DEALER_KEY
		,SK_CUST_SOURCE_KEY
		,SK_APPLICATION_STATUS_KEY
		,SK_CUST_REFINANCE_KEY
		,SK_CUST_TYPE_KEY
		,COUNT(*) AS TOTAL_CONTRACT
		,SUM(FINANCIAL_AMOUNT) AS TOTAL_FINANCIAL_AMOUNT
		,SUM(INTEREST_AMOUNT) AS TOTAL_INTEREST_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INTEREST_AMOUNT) AS TOTAL_FINANCIAL_AND_INTEREST
		,SUM(INSTALLMENT_AMOUNT) AS TOTAL_INSTALLMENT_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INSTALLMENT_AMOUNT) AS TOTAL_FINANCIAL_AND_INSTALLMENT
		,SUM(VAT_AMOUNT) AS TOTAL_VAT_AMOUNT
		,SUM(TOTAL_TERM) AS TOTAL_TERM
		,SUM(FINANCIAL_AMOUNT*TOTAL_TERM) AS TOTAL_FINANCIAL_AND_TERM
		,SUM(FLAT_RATE) AS TOTAL_FLAT_RATE
		,SUM(EFFECTIVE_RATE) AS TOTAL_EFFECTIVE_RATE
		,SUM(FINANCIAL_AMOUNT*EFFECTIVE_RATE) AS TOTAL_FINANCIAL_AND_EFFECTIVE_RATE
		,''
		,GETDATE()
 FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT] APP_CON
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DATE] DIM_DATE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_PRODUCT] DIM_PROD
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_BRANCH] DIM_BRANCH
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DEALER] DIM_DEALER
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_SOURCE] DIM_CUST_SOURCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_REFINANCE] DIM_CUST_REFINANCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_TYPE] DIM_CUST_TYPE
		,(
		  SELECT	[SK_APPLICATION_STATUS_KEY] 
		  FROM		[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_APPLICATION_STATUS]
		  WHERE		[APPLICATION_STATUS_DESC] = 'Application'
		 ) DIM_APPLICATION_STATUS
 WHERE	 CONVERT(DATETIME,CONVERT(VARCHAR(10),APP_CON.DOC_DATE,103),103) = DIM_DATE.DATE_TIME
		 AND DIM_PROD.PRODUCT_CODE = APP_CON.PRODUCT_CODE
		 AND CONVERT(DATE,DOC_DATE) BETWEEN DIM_PROD.VALID_FROM AND DIM_PROD.VALID_TO
		 AND DIM_BRANCH.BRANCH_CODE = APP_CON.BRANCH_CODE
		 AND CONVERT(DATE,DOC_DATE) BETWEEN DIM_BRANCH.VALID_FROM AND DIM_BRANCH.VALID_TO
		 AND DIM_DEALER.DEALER_CODE = APP_CON.DEALER_CODE
		 AND CONVERT(DATE,DOC_DATE) BETWEEN DIM_DEALER.VALID_FROM AND DIM_DEALER.VALID_TO
		 AND DIM_CUST_SOURCE.CUST_SOURCE_CODE = APP_CON.CUST_SOURCE_CODE
		 AND DIM_CUST_REFINANCE.CUST_REFINANCE_CODE = APP_CON.CUST_REFINANCE_CODE
		 AND DIM_CUST_TYPE.CUST_TYPE_CODE = APP_CON.CUST_TYPE_CODE
		 --AND DOC_DATE BETWEEN CONVERT(DATETIME,CONVERT(VARCHAR(10),DATEADD(DAY,-60,GETDATE()),103),103)  
			--					   AND CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),103),103)
 GROUP BY DIM_DATE.DATE_KEY
		 ,SK_PRODUCT_KEY
		 ,SK_BRANCH_KEY
		 ,SK_DEALER_KEY
		 ,SK_CUST_SOURCE_KEY
		 ,SK_APPLICATION_STATUS_KEY
		 ,SK_CUST_REFINANCE_KEY
		 ,SK_CUST_TYPE_KEY
END

 --STEP 3 INSERT DATA FOR APPLICATION_STATUS = 'Finance' (ALL PRODUCT LAST 60 DAYS)
BEGIN
 INSERT	 INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT
 SELECT	 DIM_DATE.DATE_KEY AS SK_DATE_KEY
		,SK_PRODUCT_KEY
		,SK_BRANCH_KEY
		,SK_DEALER_KEY
		,SK_CUST_SOURCE_KEY
		,SK_APPLICATION_STATUS_KEY
		,SK_CUST_REFINANCE_KEY
		,SK_CUST_TYPE_KEY
		,COUNT(*) AS TOTAL_CONTRACT
		,SUM(FINANCIAL_AMOUNT) AS TOTAL_FINANCIAL_AMOUNT
		,SUM(INTEREST_AMOUNT) AS TOTAL_INTEREST_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INTEREST_AMOUNT) AS TOTAL_FINANCIAL_AND_INTEREST
		,SUM(INSTALLMENT_AMOUNT) AS TOTAL_INSTALLMENT_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INSTALLMENT_AMOUNT) AS TOTAL_FINANCIAL_AND_INSTALLMENT
		,SUM(VAT_AMOUNT) AS TOTAL_VAT_AMOUNT
		,SUM(TOTAL_TERM) AS TOTAL_TERM
		,SUM(FINANCIAL_AMOUNT*TOTAL_TERM) AS TOTAL_FINANCIAL_AND_TERM
		,SUM(FLAT_RATE) AS TOTAL_FLAT_RATE
		,SUM(EFFECTIVE_RATE) AS TOTAL_EFFECTIVE_RATE
		,SUM(FINANCIAL_AMOUNT*EFFECTIVE_RATE) AS TOTAL_FINANCIAL_AND_EFFECTIVE_RATE
		,''
		,GETDATE()
 FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT] APP_CON
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DATE] DIM_DATE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_PRODUCT] DIM_PROD
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_BRANCH] DIM_BRANCH
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DEALER] DIM_DEALER
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_SOURCE] DIM_CUST_SOURCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_REFINANCE] DIM_CUST_REFINANCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_TYPE] DIM_CUST_TYPE
		,(
		  SELECT	[SK_APPLICATION_STATUS_KEY] 
		  FROM		[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_APPLICATION_STATUS]
		  WHERE		[APPLICATION_STATUS_DESC] = 'Finance'
		 ) DIM_APPLICATION_STATUS
 WHERE	 CONVERT(DATETIME,CONVERT(VARCHAR(10),APP_CON.APPROVE_LOAN_DATE,103),103) = DIM_DATE.DATE_TIME
		 AND DIM_PROD.PRODUCT_CODE = APP_CON.PRODUCT_CODE
		 AND CONVERT(DATE,APPROVE_LOAN_DATE) BETWEEN DIM_PROD.VALID_FROM AND DIM_PROD.VALID_TO
		 AND DIM_BRANCH.BRANCH_CODE = APP_CON.BRANCH_CODE
		 AND CONVERT(DATE,APPROVE_LOAN_DATE) BETWEEN DIM_BRANCH.VALID_FROM AND DIM_BRANCH.VALID_TO
		 AND DIM_DEALER.DEALER_CODE = APP_CON.DEALER_CODE
		 AND CONVERT(DATE,APPROVE_LOAN_DATE) BETWEEN DIM_DEALER.VALID_FROM AND DIM_DEALER.VALID_TO
		 AND DIM_CUST_SOURCE.CUST_SOURCE_CODE = APP_CON.CUST_SOURCE_CODE
		 AND DIM_CUST_REFINANCE.CUST_REFINANCE_CODE = APP_CON.CUST_REFINANCE_CODE
		 AND DIM_CUST_TYPE.CUST_TYPE_CODE = APP_CON.CUST_TYPE_CODE
		 AND APP_CON.REJECT_DESC <> 'Reject'
		 AND APP_CON.REJECT_DESC <> 'Cancel'
		 --AND APPROVE_LOAN_DATE BETWEEN CONVERT(DATETIME,CONVERT(VARCHAR(10),DATEADD(DAY,-60,GETDATE()),103),103)  
			--					   AND CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),103),103)
 GROUP BY DIM_DATE.DATE_KEY
		 ,SK_PRODUCT_KEY
		 ,SK_BRANCH_KEY
		 ,SK_DEALER_KEY
		 ,SK_CUST_SOURCE_KEY
		 ,SK_APPLICATION_STATUS_KEY
		 ,SK_CUST_REFINANCE_KEY
		 ,SK_CUST_TYPE_KEY
END

 --STEP 4 INSERT DATA FOR APPLICATION_STATUS = 'Paid' (PRODUCT SB LAST 60 DAYS)
BEGIN
 INSERT	 INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT
 SELECT	 DIM_DATE.DATE_KEY AS SK_DATE_KEY
		,SK_PRODUCT_KEY
		,SK_BRANCH_KEY
		,SK_DEALER_KEY
		,SK_CUST_SOURCE_KEY
		,SK_APPLICATION_STATUS_KEY
		,SK_CUST_REFINANCE_KEY
		,SK_CUST_TYPE_KEY
		,COUNT(*) AS TOTAL_CONTRACT
		,SUM(FINANCIAL_AMOUNT) AS TOTAL_FINANCIAL_AMOUNT
		,SUM(INTEREST_AMOUNT) AS TOTAL_INTEREST_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INTEREST_AMOUNT) AS TOTAL_FINANCIAL_AND_INTEREST
		,SUM(INSTALLMENT_AMOUNT) AS TOTAL_INSTALLMENT_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INSTALLMENT_AMOUNT) AS TOTAL_FINANCIAL_AND_INSTALLMENT
		,SUM(VAT_AMOUNT) AS TOTAL_VAT_AMOUNT
		,SUM(TOTAL_TERM) AS TOTAL_TERM
		,SUM(FINANCIAL_AMOUNT*TOTAL_TERM) AS TOTAL_FINANCIAL_AND_TERM
		,SUM(FLAT_RATE) AS TOTAL_FLAT_RATE
		,SUM(EFFECTIVE_RATE) AS TOTAL_EFFECTIVE_RATE
		,SUM(FINANCIAL_AMOUNT*EFFECTIVE_RATE) AS TOTAL_FINANCIAL_AND_EFFECTIVE_RATE
		,''
		,GETDATE()
 FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT] APP_CON
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DATE] DIM_DATE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_PRODUCT] DIM_PROD
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_BRANCH] DIM_BRANCH
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DEALER] DIM_DEALER
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_SOURCE] DIM_CUST_SOURCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_REFINANCE] DIM_CUST_REFINANCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_TYPE] DIM_CUST_TYPE
		,(
		  SELECT	[SK_APPLICATION_STATUS_KEY] 
		  FROM		[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_APPLICATION_STATUS]
		  WHERE		[APPLICATION_STATUS_DESC] = 'Paid'
		 ) DIM_APPLICATION_STATUS
 WHERE	 CONVERT(DATETIME,CONVERT(VARCHAR(10),APP_CON.DOC_DATE,103),103) = DIM_DATE.DATE_TIME
		 AND DIM_PROD.PRODUCT_CODE = APP_CON.PRODUCT_CODE
		 AND CONVERT(DATE,DOC_DATE) BETWEEN DIM_PROD.VALID_FROM AND DIM_PROD.VALID_TO
		 AND DIM_BRANCH.BRANCH_CODE = APP_CON.BRANCH_CODE
		 AND CONVERT(DATE,DOC_DATE) BETWEEN DIM_BRANCH.VALID_FROM AND DIM_BRANCH.VALID_TO
		 AND DIM_DEALER.DEALER_CODE = APP_CON.DEALER_CODE
		 AND CONVERT(DATE,DOC_DATE) BETWEEN DIM_DEALER.VALID_FROM AND DIM_DEALER.VALID_TO
		 AND DIM_CUST_SOURCE.CUST_SOURCE_CODE = APP_CON.CUST_SOURCE_CODE
		 AND DIM_CUST_REFINANCE.CUST_REFINANCE_CODE = APP_CON.CUST_REFINANCE_CODE
		 AND DIM_CUST_TYPE.CUST_TYPE_CODE = APP_CON.CUST_TYPE_CODE
		 AND DIM_PROD.PRODUCT_NAME = 'SB'
		 AND APP_CON.REQUEST_STATUS >= 'W'
		 AND APP_CON.REJECT_DESC <> 'Reject'
		 AND APP_CON.REJECT_DESC <> 'Cancel'
		 --AND DOC_DATE BETWEEN CONVERT(DATETIME,CONVERT(VARCHAR(10),DATEADD(DAY,-60,GETDATE()),103),103)  
			--					   AND CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),103),103)
 GROUP BY DIM_DATE.DATE_KEY
		 ,SK_PRODUCT_KEY
		 ,SK_BRANCH_KEY
		 ,SK_DEALER_KEY
		 ,SK_CUST_SOURCE_KEY
		 ,SK_APPLICATION_STATUS_KEY
		 ,SK_CUST_REFINANCE_KEY
		 ,SK_CUST_TYPE_KEY
END

 --STEP 5 INSERT DATA FOR APPLICATION_STATUS = 'Approve' (PRODUCT SB LAST 60 DAYS)
BEGIN
 INSERT	 INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT
 SELECT	 DIM_DATE.DATE_KEY AS SK_DATE_KEY
		,SK_PRODUCT_KEY
		,SK_BRANCH_KEY
		,SK_DEALER_KEY
		,SK_CUST_SOURCE_KEY
		,SK_APPLICATION_STATUS_KEY
		,SK_CUST_REFINANCE_KEY
		,SK_CUST_TYPE_KEY
		,COUNT(*) AS TOTAL_CONTRACT
		,SUM(FINANCIAL_AMOUNT) AS TOTAL_FINANCIAL_AMOUNT
		,SUM(INTEREST_AMOUNT) AS TOTAL_INTEREST_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INTEREST_AMOUNT) AS TOTAL_FINANCIAL_AND_INTEREST
		,SUM(INSTALLMENT_AMOUNT) AS TOTAL_INSTALLMENT_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INSTALLMENT_AMOUNT) AS TOTAL_FINANCIAL_AND_INSTALLMENT
		,SUM(VAT_AMOUNT) AS TOTAL_VAT_AMOUNT
		,SUM(TOTAL_TERM) AS TOTAL_TERM
		,SUM(FINANCIAL_AMOUNT*TOTAL_TERM) AS TOTAL_FINANCIAL_AND_TERM
		,SUM(FLAT_RATE) AS TOTAL_FLAT_RATE
		,SUM(EFFECTIVE_RATE) AS TOTAL_EFFECTIVE_RATE
		,SUM(FINANCIAL_AMOUNT*EFFECTIVE_RATE) AS TOTAL_FINANCIAL_AND_EFFECTIVE_RATE
		,''
		,GETDATE()
 FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT] APP_CON
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DATE] DIM_DATE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_PRODUCT] DIM_PROD
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_BRANCH] DIM_BRANCH
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DEALER] DIM_DEALER
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_SOURCE] DIM_CUST_SOURCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_REFINANCE] DIM_CUST_REFINANCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_TYPE] DIM_CUST_TYPE
		,(
		  SELECT	[SK_APPLICATION_STATUS_KEY] 
		  FROM		[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_APPLICATION_STATUS]
		  WHERE		[APPLICATION_STATUS_DESC] = 'Approve'
		 ) DIM_APPLICATION_STATUS
 WHERE	 CONVERT(DATETIME,CONVERT(VARCHAR(10),APP_CON.APPROVE_REQUEST_DATE,103),103) = DIM_DATE.DATE_TIME
		 AND DIM_PROD.PRODUCT_CODE = APP_CON.PRODUCT_CODE
		 AND CONVERT(DATE,APPROVE_REQUEST_DATE) BETWEEN DIM_PROD.VALID_FROM AND DIM_PROD.VALID_TO
		 AND DIM_BRANCH.BRANCH_CODE = APP_CON.BRANCH_CODE
		 AND CONVERT(DATE,APPROVE_REQUEST_DATE) BETWEEN DIM_BRANCH.VALID_FROM AND DIM_BRANCH.VALID_TO
		 AND DIM_DEALER.DEALER_CODE = APP_CON.DEALER_CODE
		 AND CONVERT(DATE,APPROVE_REQUEST_DATE) BETWEEN DIM_DEALER.VALID_FROM AND DIM_DEALER.VALID_TO
		 AND DIM_CUST_SOURCE.CUST_SOURCE_CODE = APP_CON.CUST_SOURCE_CODE
		 AND DIM_CUST_REFINANCE.CUST_REFINANCE_CODE = APP_CON.CUST_REFINANCE_CODE
		 AND DIM_CUST_TYPE.CUST_TYPE_CODE = APP_CON.CUST_TYPE_CODE
		 AND DIM_PROD.PRODUCT_NAME = 'SB'
		 AND APP_CON.REQUEST_STATUS >= '@m'
		 AND APP_CON.REJECT_DESC <> 'Reject'
		 AND APP_CON.REJECT_DESC <> 'Cancel'
		 --AND APPROVE_REQUEST_DATE BETWEEN CONVERT(DATETIME,CONVERT(VARCHAR(10),DATEADD(DAY,-60,GETDATE()),103),103)  
			--					   AND CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),103),103)
 GROUP BY DIM_DATE.DATE_KEY
		 ,SK_PRODUCT_KEY
		 ,SK_BRANCH_KEY
		 ,SK_DEALER_KEY
		 ,SK_CUST_SOURCE_KEY
		 ,SK_APPLICATION_STATUS_KEY
		 ,SK_CUST_REFINANCE_KEY
		 ,SK_CUST_TYPE_KEY
END

 --STEP 6 INSERT DATA FOR APPLICATION_STATUS IN ('Reject','Cancel') (ALL PRODUCT LAST 60 DAYS)
BEGIN
 INSERT	 INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT
 SELECT	 DIM_DATE.DATE_KEY AS SK_DATE_KEY
		,SK_PRODUCT_KEY
		,SK_BRANCH_KEY
		,SK_DEALER_KEY
		,SK_CUST_SOURCE_KEY
		,SK_APPLICATION_STATUS_KEY
		,SK_CUST_REFINANCE_KEY
		,SK_CUST_TYPE_KEY
		,COUNT(*) AS TOTAL_CONTRACT
		,SUM(FINANCIAL_AMOUNT) AS TOTAL_FINANCIAL_AMOUNT
		,SUM(INTEREST_AMOUNT) AS TOTAL_INTEREST_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INTEREST_AMOUNT) AS TOTAL_FINANCIAL_AND_INTEREST
		,SUM(INSTALLMENT_AMOUNT) AS TOTAL_INSTALLMENT_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INSTALLMENT_AMOUNT) AS TOTAL_FINANCIAL_AND_INSTALLMENT
		,SUM(VAT_AMOUNT) AS TOTAL_VAT_AMOUNT
		,SUM(TOTAL_TERM) AS TOTAL_TERM
		,SUM(FINANCIAL_AMOUNT*TOTAL_TERM) AS TOTAL_FINANCIAL_AND_TERM
		,SUM(FLAT_RATE) AS TOTAL_FLAT_RATE
		,SUM(EFFECTIVE_RATE) AS TOTAL_EFFECTIVE_RATE
		,SUM(FINANCIAL_AMOUNT*EFFECTIVE_RATE) AS TOTAL_FINANCIAL_AND_EFFECTIVE_RATE
		,''
		,GETDATE()
 FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT] APP_CON
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DATE] DIM_DATE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_PRODUCT] DIM_PROD
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_BRANCH] DIM_BRANCH
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DEALER] DIM_DEALER
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_SOURCE] DIM_CUST_SOURCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_REFINANCE] DIM_CUST_REFINANCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_TYPE] DIM_CUST_TYPE
		,(
		  SELECT	[SK_APPLICATION_STATUS_KEY] ,[APPLICATION_STATUS_DESC]
		  FROM		[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_APPLICATION_STATUS]
		  WHERE		[APPLICATION_STATUS_DESC] IN ('Reject','Cancel')
		 ) DIM_APPLICATION_STATUS
 WHERE	 CONVERT(DATETIME,CONVERT(VARCHAR(10),APP_CON.CANCEL_DATE,103),103) = DIM_DATE.DATE_TIME
		 AND DIM_PROD.PRODUCT_CODE = APP_CON.PRODUCT_CODE
		 AND CONVERT(DATE,CANCEL_DATE) BETWEEN DIM_PROD.VALID_FROM AND DIM_PROD.VALID_TO
		 AND DIM_BRANCH.BRANCH_CODE = APP_CON.BRANCH_CODE
		 AND CONVERT(DATE,CANCEL_DATE) BETWEEN DIM_BRANCH.VALID_FROM AND DIM_BRANCH.VALID_TO
		 AND DIM_DEALER.DEALER_CODE = APP_CON.DEALER_CODE
		 AND CONVERT(DATE,CANCEL_DATE) BETWEEN DIM_DEALER.VALID_FROM AND DIM_DEALER.VALID_TO
		 AND DIM_CUST_SOURCE.CUST_SOURCE_CODE = APP_CON.CUST_SOURCE_CODE
		 AND DIM_CUST_REFINANCE.CUST_REFINANCE_CODE = APP_CON.CUST_REFINANCE_CODE
		 AND DIM_CUST_TYPE.CUST_TYPE_CODE = APP_CON.CUST_TYPE_CODE
		 AND APP_CON.REJECT_DESC = DIM_APPLICATION_STATUS.APPLICATION_STATUS_DESC
		 --AND CANCEL_DATE BETWEEN CONVERT(DATETIME,CONVERT(VARCHAR(10),DATEADD(DAY,-60,GETDATE()),103),103)  
			--					   AND CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),103),103)
 GROUP BY DIM_DATE.DATE_KEY
		 ,SK_PRODUCT_KEY
		 ,SK_BRANCH_KEY
		 ,SK_DEALER_KEY
		 ,SK_CUST_SOURCE_KEY
		 ,SK_APPLICATION_STATUS_KEY
		 ,SK_CUST_REFINANCE_KEY
		 ,SK_CUST_TYPE_KEY
END

--STEP 7 INSERT DATA FOR APPLICATION_STATUS = 'Waiting' (PRODUCT SB LAST 60 DAYS)
BEGIN
 INSERT	 INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT
 SELECT	 DIM_DATE.DATE_KEY AS SK_DATE_KEY
		,SK_PRODUCT_KEY
		,SK_BRANCH_KEY
		,SK_DEALER_KEY
		,SK_CUST_SOURCE_KEY
		,SK_APPLICATION_STATUS_KEY
		,SK_CUST_REFINANCE_KEY
		,SK_CUST_TYPE_KEY
		,COUNT(*) AS TOTAL_CONTRACT
		,SUM(FINANCIAL_AMOUNT) AS TOTAL_FINANCIAL_AMOUNT
		,SUM(INTEREST_AMOUNT) AS TOTAL_INTEREST_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INTEREST_AMOUNT) AS TOTAL_FINANCIAL_AND_INTEREST
		,SUM(INSTALLMENT_AMOUNT) AS TOTAL_INSTALLMENT_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INSTALLMENT_AMOUNT) AS TOTAL_FINANCIAL_AND_INSTALLMENT
		,SUM(VAT_AMOUNT) AS TOTAL_VAT_AMOUNT
		,SUM(TOTAL_TERM) AS TOTAL_TERM
		,SUM(FINANCIAL_AMOUNT*TOTAL_TERM) AS TOTAL_FINANCIAL_AND_TERM
		,SUM(FLAT_RATE) AS TOTAL_FLAT_RATE
		,SUM(EFFECTIVE_RATE) AS TOTAL_EFFECTIVE_RATE
		,SUM(FINANCIAL_AMOUNT*EFFECTIVE_RATE) AS TOTAL_FINANCIAL_AND_EFFECTIVE_RATE
		,''
		,GETDATE()
 FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT] APP_CON
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DATE] DIM_DATE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_PRODUCT] DIM_PROD
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_BRANCH] DIM_BRANCH
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DEALER] DIM_DEALER
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_SOURCE] DIM_CUST_SOURCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_REFINANCE] DIM_CUST_REFINANCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_TYPE] DIM_CUST_TYPE
		,(
		  SELECT	[SK_APPLICATION_STATUS_KEY] ,[APPLICATION_STATUS_DESC]
		  FROM		[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_APPLICATION_STATUS]
		  WHERE		[APPLICATION_STATUS_DESC] = 'Waitng'
		 ) DIM_APPLICATION_STATUS
 WHERE	 CONVERT(DATETIME,CONVERT(VARCHAR(10),APP_CON.WAITING_DATE,103),103) = DIM_DATE.DATE_TIME
		 AND DIM_PROD.PRODUCT_CODE = APP_CON.PRODUCT_CODE
		 AND CONVERT(DATE,WAITING_DATE) BETWEEN DIM_PROD.VALID_FROM AND DIM_PROD.VALID_TO
		 AND DIM_BRANCH.BRANCH_CODE = APP_CON.BRANCH_CODE
		 AND CONVERT(DATE,WAITING_DATE) BETWEEN DIM_BRANCH.VALID_FROM AND DIM_BRANCH.VALID_TO
		 AND DIM_DEALER.DEALER_CODE = APP_CON.DEALER_CODE
		 AND CONVERT(DATE,WAITING_DATE) BETWEEN DIM_DEALER.VALID_FROM AND DIM_DEALER.VALID_TO
		 AND DIM_CUST_SOURCE.CUST_SOURCE_CODE = APP_CON.CUST_SOURCE_CODE
		 AND DIM_CUST_REFINANCE.CUST_REFINANCE_CODE = APP_CON.CUST_REFINANCE_CODE
		 AND DIM_CUST_TYPE.CUST_TYPE_CODE = APP_CON.CUST_TYPE_CODE
		 AND DIM_PROD.PRODUCT_NAME = 'SB'
		 AND APP_CON.REJECT_DESC <> 'Reject'
		 AND APP_CON.REJECT_DESC <> 'Cancel'
		 --AND WAITING_DATE BETWEEN CONVERT(DATETIME,CONVERT(VARCHAR(10),DATEADD(DAY,-60,GETDATE()),103),103)  
			--					   AND CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),103),103)
 GROUP BY DIM_DATE.DATE_KEY
		 ,SK_PRODUCT_KEY
		 ,SK_BRANCH_KEY
		 ,SK_DEALER_KEY
		 ,SK_CUST_SOURCE_KEY
		 ,SK_APPLICATION_STATUS_KEY
		 ,SK_CUST_REFINANCE_KEY
		 ,SK_CUST_TYPE_KEY
END

--STEP 8 INSERT DATA FOR APPLICATION_STATUS = 'Payable' (ALL PRODUCT LAST 60 DAYS)
BEGIN
 INSERT	 INTO GL_TNB_MRT.FACT.MRT_TNB_FCT_SALE_CONTRACT
 SELECT	 DIM_DATE.DATE_KEY AS SK_DATE_KEY
		,SK_PRODUCT_KEY
		,SK_BRANCH_KEY
		,SK_DEALER_KEY
		,SK_CUST_SOURCE_KEY
		,SK_APPLICATION_STATUS_KEY
		,SK_CUST_REFINANCE_KEY
		,SK_CUST_TYPE_KEY
		,COUNT(*) AS TOTAL_CONTRACT
		,SUM(FINANCIAL_AMOUNT) AS TOTAL_FINANCIAL_AMOUNT
		,SUM(INTEREST_AMOUNT) AS TOTAL_INTEREST_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INTEREST_AMOUNT) AS TOTAL_FINANCIAL_AND_INTEREST
		,SUM(INSTALLMENT_AMOUNT) AS TOTAL_INSTALLMENT_AMOUNT
		,SUM(FINANCIAL_AMOUNT*INSTALLMENT_AMOUNT) AS TOTAL_FINANCIAL_AND_INSTALLMENT
		,SUM(VAT_AMOUNT) AS TOTAL_VAT_AMOUNT
		,SUM(TOTAL_TERM) AS TOTAL_TERM
		,SUM(FINANCIAL_AMOUNT*TOTAL_TERM) AS TOTAL_FINANCIAL_AND_TERM
		,SUM(FLAT_RATE) AS TOTAL_FLAT_RATE
		,SUM(EFFECTIVE_RATE) AS TOTAL_EFFECTIVE_RATE
		,SUM(FINANCIAL_AMOUNT*EFFECTIVE_RATE) AS TOTAL_FINANCIAL_AND_EFFECTIVE_RATE
		,''
		,GETDATE()
 FROM	 [GL_TNB_DWH].[FACT].[DWH_TNB_FCT_APP_CONTRACT] APP_CON
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DATE] DIM_DATE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_PRODUCT] DIM_PROD
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_BRANCH] DIM_BRANCH
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_DEALER] DIM_DEALER
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_SOURCE] DIM_CUST_SOURCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_REFINANCE] DIM_CUST_REFINANCE
		,[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_CUST_TYPE] DIM_CUST_TYPE
		,(
		  SELECT	[SK_APPLICATION_STATUS_KEY] ,[APPLICATION_STATUS_DESC]
		  FROM		[GL_TNB_DWH].[DIM].[DWH_TNB_DIM_APPLICATION_STATUS]
		  WHERE		[APPLICATION_STATUS_DESC] = 'Payable'
		 ) DIM_APPLICATION_STATUS
 WHERE	 CONVERT(DATETIME,CONVERT(VARCHAR(10),APP_CON.PENDING_PAYMENT_DATE,103),103) = DIM_DATE.DATE_TIME
		 AND DIM_PROD.PRODUCT_CODE = APP_CON.PRODUCT_CODE
		 AND CONVERT(DATE,PENDING_PAYMENT_DATE) BETWEEN DIM_PROD.VALID_FROM AND DIM_PROD.VALID_TO
		 AND DIM_BRANCH.BRANCH_CODE = APP_CON.BRANCH_CODE
		 AND CONVERT(DATE,PENDING_PAYMENT_DATE) BETWEEN DIM_BRANCH.VALID_FROM AND DIM_BRANCH.VALID_TO
		 AND DIM_DEALER.DEALER_CODE = APP_CON.DEALER_CODE
		 AND CONVERT(DATE,PENDING_PAYMENT_DATE) BETWEEN DIM_DEALER.VALID_FROM AND DIM_DEALER.VALID_TO
		 AND DIM_CUST_SOURCE.CUST_SOURCE_CODE = APP_CON.CUST_SOURCE_CODE
		 AND DIM_CUST_REFINANCE.CUST_REFINANCE_CODE = APP_CON.CUST_REFINANCE_CODE
		 AND DIM_CUST_TYPE.CUST_TYPE_CODE = APP_CON.CUST_TYPE_CODE
		 AND DIM_PROD.PRODUCT_NAME = 'SB'
		 AND APP_CON.REJECT_DESC <> 'Reject'
		 AND APP_CON.REJECT_DESC <> 'Cancel'
		 --AND PENDING_PAYMENT_DATE BETWEEN CONVERT(DATETIME,CONVERT(VARCHAR(10),DATEADD(DAY,-60,GETDATE()),103),103)  
			--					   AND CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),103),103)
 GROUP BY DIM_DATE.DATE_KEY
		 ,SK_PRODUCT_KEY
		 ,SK_BRANCH_KEY
		 ,SK_DEALER_KEY
		 ,SK_CUST_SOURCE_KEY
		 ,SK_APPLICATION_STATUS_KEY
		 ,SK_CUST_REFINANCE_KEY
		 ,SK_CUST_TYPE_KEY
END
END

GO
