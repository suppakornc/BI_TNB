-----------------------------------------------------------------------------------------------------------------------------
-- Script for Initializing all TNB database.
-- Author			: Nattapong Laiyapark
-- Creation Date	: Sep 01st 2016
-----------------------------------------------------------------------------------------------------------------------------
-- Developer Notes	: 1. 	 
-----------------------------------------------------------------------------------------------------------------------------
-- DBA Notes		: 1. Filegroups are split by CLUSTERED (DATA) and NON-CLUSTERED (INDEX) indices. 
--						 [GL_TNB_XXX_DATA] is the default filegroup
--					  2. Separate Flie Groups are created for DATA, INDEX
--					  3. High I/O file groups like LOG and TEST should be kept on a disk array with maximum IOPS.  	
--					
------------------------------------------------------------------------------------------------------------------------------
-- Revision History ----------------------------------------------------------------------------------------------------------
-- 2016-09-01	Nattapong Laiyapark	Creation of this initialization script.
----------------------------------------------------------------------------------------------------------------------------------
------------------------------------- C A U T I O N ------------------------------------------------------------------------------
-- DO NOT RUN THIS SCRIPT IN A PRODUCTION ENVIRONMENT.
-- EXISTING DATA WILL BE LOST. MAKE SURE DATABASE BACKUP EXISTS BEFORE RUNNING THIS SCRIPT 
-----------------------------------------------------------------------------------------------------------------------------------
-- Find:            D: --> Well, except this line.
-- Replace With:    c:
-----------------------------------------------------------------------------------------------------------------------------------

/* TNB Staging database craeteion*/
USE [MASTER]
GO

-- sp_who2
IF EXISTS (SELECT name FROM sys.databases WHERE name = N'GL_TNB_STG')
BEGIN
    ALTER DATABASE [GL_TNB_STG] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
	DROP DATABASE [GL_TNB_STG]
END
GO	

CREATE DATABASE [GL_TNB_STG]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'GL_TNB_STG', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_STG.mdf' , SIZE = 3072KB , FILEGROWTH = 10%), 
 FILEGROUP [FG_GL_TNB_STG_DATA] 
( NAME = N'GL_TNB_STG_DATA_01', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_STG_DATA_01.ndf' , SIZE = 3072KB , FILEGROWTH = 10%),
( NAME = N'GL_TNB_STG_DATA_02', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_STG_DATA_02.ndf' , SIZE = 3072KB , FILEGROWTH = 10%), 
 FILEGROUP [FG_GL_TNB_STG_INDEX] 
( NAME = N'GL_TNB_STG_INDEX_01', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_STG_INDEX_01.ndf' , SIZE = 3072KB , FILEGROWTH = 10%),
( NAME = N'GL_TNB_STG_INDEX_02', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_STG_INDEX_02.ndf' , SIZE = 3072KB , FILEGROWTH = 10%)
 LOG ON 
( NAME = N'GL_TNB_STG_log', FILENAME = N'D:\MSSQLSERVER\Logs\GL_TNB_STG_log.ldf' , SIZE = 1024KB , FILEGROWTH = 10%)
 COLLATE Thai_100_CI_AS
GO
ALTER DATABASE [GL_TNB_STG] SET COMPATIBILITY_LEVEL = 120
GO
ALTER DATABASE [GL_TNB_STG] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET ARITHABORT OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET AUTO_CREATE_STATISTICS ON
GO
ALTER DATABASE [GL_TNB_STG] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [GL_TNB_STG] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [GL_TNB_STG] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET  DISABLE_BROKER 
GO
ALTER DATABASE [GL_TNB_STG] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [GL_TNB_STG] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [GL_TNB_STG] SET  READ_WRITE 
GO
ALTER DATABASE [GL_TNB_STG] SET RECOVERY FULL 
GO
ALTER DATABASE [GL_TNB_STG] SET  MULTI_USER 
GO
ALTER DATABASE [GL_TNB_STG] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [GL_TNB_STG] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
ALTER DATABASE [GL_TNB_STG] SET DELAYED_DURABILITY = DISABLED 
GO
USE [GL_TNB_STG]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [GL_TNB_STG] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO

PRINT SUBSTRING(CONVERT(NVARCHAR(33),CURRENT_TIMESTAMP,121),1,19) + ': GL_TNB_STG DATABASE CREATED.'
----------------------------------------------------------------------------------------------------------------
/* TNB Operational Data Store database craeteion*/

USE [MASTER]
GO

-- sp_who2
IF EXISTS (SELECT name FROM sys.databases WHERE name = N'GL_TNB_ODS')
BEGIN
    ALTER DATABASE [GL_TNB_ODS] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
	DROP DATABASE [GL_TNB_ODS]
END
GO	

CREATE DATABASE [GL_TNB_ODS]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'GL_TNB_ODS', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_ODS.mdf' , SIZE = 3072KB , FILEGROWTH = 10%), 
 FILEGROUP [FG_GL_TNB_ODS_DATA] 
( NAME = N'GL_TNB_ODS_DATA_01', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_ODS_DATA_01.ndf' , SIZE = 3072KB , FILEGROWTH = 10%),
( NAME = N'GL_TNB_ODS_DATA_02', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_ODS_DATA_02.ndf' , SIZE = 3072KB , FILEGROWTH = 10%), 
 FILEGROUP [FG_GL_TNB_ODS_INDEX] 
( NAME = N'GL_TNB_ODS_INDEX_01', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_ODS_INDEX_01.ndf' , SIZE = 3072KB , FILEGROWTH = 10%),
( NAME = N'GL_TNB_ODS_INDEX_02', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_ODS_INDEX_02.ndf' , SIZE = 3072KB , FILEGROWTH = 10%)
 LOG ON 
( NAME = N'GL_TNB_ODS_log', FILENAME = N'D:\MSSQLSERVER\Logs\GL_TNB_ODS_log.ldf' , SIZE = 1024KB , FILEGROWTH = 10%)
 COLLATE Thai_100_CI_AS
GO
ALTER DATABASE [GL_TNB_ODS] SET COMPATIBILITY_LEVEL = 120
GO
ALTER DATABASE [GL_TNB_ODS] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET ARITHABORT OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET AUTO_CREATE_STATISTICS ON
GO
ALTER DATABASE [GL_TNB_ODS] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [GL_TNB_ODS] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [GL_TNB_ODS] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET  DISABLE_BROKER 
GO
ALTER DATABASE [GL_TNB_ODS] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [GL_TNB_ODS] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [GL_TNB_ODS] SET  READ_WRITE 
GO
ALTER DATABASE [GL_TNB_ODS] SET RECOVERY FULL 
GO
ALTER DATABASE [GL_TNB_ODS] SET  MULTI_USER 
GO
ALTER DATABASE [GL_TNB_ODS] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [GL_TNB_ODS] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
ALTER DATABASE [GL_TNB_ODS] SET DELAYED_DURABILITY = DISABLED 
GO
USE [GL_TNB_ODS]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [GL_TNB_ODS] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO

PRINT SUBSTRING(CONVERT(NVARCHAR(33),CURRENT_TIMESTAMP,121),1,19) + ': GL_TNB_ODS DATABASE CREATED.'
----------------------------------------------------------------------------------------------------------------
/* TNB Operational Datawarehosue database craeteion*/

USE [MASTER]
GO

-- sp_who2
IF EXISTS (SELECT name FROM sys.databases WHERE name = N'GL_TNB_DWH')
BEGIN
    ALTER DATABASE [GL_TNB_DWH] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
	DROP DATABASE [GL_TNB_DWH]
END
GO	

CREATE DATABASE [GL_TNB_DWH]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'GL_TNB_DWH', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_DWH.mdf' , SIZE = 3072KB , FILEGROWTH = 10%), 
 FILEGROUP [FG_GL_TNB_DWH_DATA] 
( NAME = N'GL_TNB_DWH_DATA_01', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_DWH_DATA_01.ndf' , SIZE = 3072KB , FILEGROWTH = 10%),
( NAME = N'GL_TNB_DWH_DATA_02', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_DWH_DATA_02.ndf' , SIZE = 3072KB , FILEGROWTH = 10%), 
 FILEGROUP [FG_GL_TNB_DWH_INDEX] 
( NAME = N'GL_TNB_DWH_INDEX_01', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_DWH_INDEX_01.ndf' , SIZE = 3072KB , FILEGROWTH = 10%),
( NAME = N'GL_TNB_DWH_INDEX_02', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_DWH_INDEX_02.ndf' , SIZE = 3072KB , FILEGROWTH = 10%)
 LOG ON 
( NAME = N'GL_TNB_DWH_log', FILENAME = N'D:\MSSQLSERVER\Logs\GL_TNB_DWH_log.ldf' , SIZE = 1024KB , FILEGROWTH = 10%)
 COLLATE Thai_100_CI_AS
GO
ALTER DATABASE [GL_TNB_DWH] SET COMPATIBILITY_LEVEL = 120
GO
ALTER DATABASE [GL_TNB_DWH] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET ARITHABORT OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET AUTO_CREATE_STATISTICS ON
GO
ALTER DATABASE [GL_TNB_DWH] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [GL_TNB_DWH] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [GL_TNB_DWH] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET  DISABLE_BROKER 
GO
ALTER DATABASE [GL_TNB_DWH] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [GL_TNB_DWH] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [GL_TNB_DWH] SET  READ_WRITE 
GO
ALTER DATABASE [GL_TNB_DWH] SET RECOVERY FULL 
GO
ALTER DATABASE [GL_TNB_DWH] SET  MULTI_USER 
GO
ALTER DATABASE [GL_TNB_DWH] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [GL_TNB_DWH] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
ALTER DATABASE [GL_TNB_DWH] SET DELAYED_DURABILITY = DISABLED 
GO
USE [GL_TNB_DWH]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [GL_TNB_DWH] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO

PRINT SUBSTRING(CONVERT(NVARCHAR(33),CURRENT_TIMESTAMP,121),1,19) + ': GL_TNB_DWH DATABASE CREATED.'
----------------------------------------------------------------------------------------------------------------

USE [MASTER]
GO

-- sp_who2
IF EXISTS (SELECT name FROM sys.databases WHERE name = N'GL_TNB_MRT')
BEGIN
    ALTER DATABASE [GL_TNB_MRT] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
	DROP DATABASE [GL_TNB_MRT]
END
GO	

CREATE DATABASE [GL_TNB_MRT]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'GL_TNB_MRT', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_MRT.mdf' , SIZE = 3072KB , FILEGROWTH = 10%), 
 FILEGROUP [FG_GL_TNB_MRT_DATA] 
( NAME = N'GL_TNB_MRT_DATA_01', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_MRT_DATA_01.ndf' , SIZE = 3072KB , FILEGROWTH = 10%),
( NAME = N'GL_TNB_MRT_DATA_02', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_MRT_DATA_02.ndf' , SIZE = 3072KB , FILEGROWTH = 10%), 
 FILEGROUP [FG_GL_TNB_MRT_INDEX] 
( NAME = N'GL_TNB_MRT_INDEX_01', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_MRT_INDEX_01.ndf' , SIZE = 3072KB , FILEGROWTH = 10%),
( NAME = N'GL_TNB_MRT_INDEX_02', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_MRT_INDEX_02.ndf' , SIZE = 3072KB , FILEGROWTH = 10%)
 LOG ON 
( NAME = N'GL_TNB_MRT_log', FILENAME = N'D:\MSSQLSERVER\Logs\GL_TNB_MRT_log.ldf' , SIZE = 1024KB , FILEGROWTH = 10%)
 COLLATE Thai_100_CI_AS
GO
ALTER DATABASE [GL_TNB_MRT] SET COMPATIBILITY_LEVEL = 120
GO
ALTER DATABASE [GL_TNB_MRT] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET ARITHABORT OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET AUTO_CREATE_STATISTICS ON
GO
ALTER DATABASE [GL_TNB_MRT] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [GL_TNB_MRT] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [GL_TNB_MRT] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET  DISABLE_BROKER 
GO
ALTER DATABASE [GL_TNB_MRT] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [GL_TNB_MRT] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [GL_TNB_MRT] SET  READ_WRITE 
GO
ALTER DATABASE [GL_TNB_MRT] SET RECOVERY FULL 
GO
ALTER DATABASE [GL_TNB_MRT] SET  MULTI_USER 
GO
ALTER DATABASE [GL_TNB_MRT] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [GL_TNB_MRT] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
ALTER DATABASE [GL_TNB_MRT] SET DELAYED_DURABILITY = DISABLED 
GO
USE [GL_TNB_MRT]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [GL_TNB_MRT] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO

PRINT SUBSTRING(CONVERT(NVARCHAR(33),CURRENT_TIMESTAMP,121),1,19) + ': GL_TNB_MRT DATABASE CREATED.'
----------------------------------------------------------------------------------------------------------------

USE [MASTER]
GO

-- sp_who2
IF EXISTS (SELECT name FROM sys.databases WHERE name = N'GL_TNB_RESPO')
BEGIN
    ALTER DATABASE [GL_TNB_RESPO] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
	DROP DATABASE [GL_TNB_RESPO]
END
GO	

CREATE DATABASE [GL_TNB_RESPO]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'GL_TNB_RESPO', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_RESPO.mdf' , SIZE = 8192KB , FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'GL_TNB_RESPO_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.GLTH\MSSQL\DATA\GL_TNB_RESPO_log.ldf' , SIZE = 8192KB , FILEGROWTH = 65536KB )
GO
ALTER DATABASE [GL_TNB_RESPO] SET COMPATIBILITY_LEVEL = 130
GO
ALTER DATABASE [GL_TNB_RESPO] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET ARITHABORT OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF)
GO
ALTER DATABASE [GL_TNB_RESPO] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [GL_TNB_RESPO] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [GL_TNB_RESPO] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET  DISABLE_BROKER 
GO
ALTER DATABASE [GL_TNB_RESPO] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [GL_TNB_RESPO] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [GL_TNB_RESPO] SET  READ_WRITE 
GO
ALTER DATABASE [GL_TNB_RESPO] SET RECOVERY FULL 
GO
ALTER DATABASE [GL_TNB_RESPO] SET  MULTI_USER 
GO
ALTER DATABASE [GL_TNB_RESPO] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [GL_TNB_RESPO] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [GL_TNB_RESPO] SET DELAYED_DURABILITY = DISABLED 
GO
USE [GL_TNB_RESPO]
GO
ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
GO
ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
GO
ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
GO
ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
GO
USE [GL_TNB_RESPO]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [GL_TNB_RESPO] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO


PRINT SUBSTRING(CONVERT(NVARCHAR(33),CURRENT_TIMESTAMP,121),1,19) + ': GL_TNB_RESPO DATABASE CREATED.'
----------------------------------------------------------------------------------------------------------------
/* TNB Operational Data Store database craeteion*/